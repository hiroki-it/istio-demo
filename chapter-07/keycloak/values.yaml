affinity: |
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node.kubernetes.io/nodegroup
              operator: In
              values:
                - app

args:
  - start-dev
  - --import-realm

replicas: 2

command:
  - /opt/keycloak/bin/kc.sh

database:
  vendor: mysql
  hostname: dev.istio-demo-mysql
  port: 3306
  database: keycloak
  username: root
  password: root

extraEnv: |
  - name: KC_BOOTSTRAP_ADMIN_USERNAME
    value: admin
  - name: KC_BOOTSTRAP_ADMIN_PASSWORD
    value: admin
  - name: KC_PROXY
    values: edge
  - name: JAVA_OPTS_APPEND
    value: -Djgroups.dns.query=keycloak-headless.keycloak.svc.cluster.local

extraVolumes: |
  - name: keycloak-realms
    secret:
      secretName: keycloak-realms

extraVolumeMounts: |
  - name: keycloak-realms
    mountPath: /opt/keycloak/data/import

fullnameOverride: keycloak

http:
  relativePath: /

image:
  tag: 26.1.4

resources:
  requests:
    cpu: 600m
    memory: 1024Mi
  limits:
    cpu: 1500m
    memory: 2048Mi

service:
  httpPort: 8080
  httpsPort: 8443

secrets:
  realms:
    data:
      realm-master.json: ''
      realm-dev.json: 'ewogICJpZCI6ICIzYjE5NWU0MS05MGExLTRmODUtYjQzNC1jYTk2M2Y0MTg0ODgiLAogICJyZWFsbSI6ICJkZXYiLAogICJkaXNwbGF5TmFtZSI6ICIiLAogICJkaXNwbGF5TmFtZUh0bWwiOiAiTG9naW4gd2l0aCBLZXljbG9hayIsCiAgIm5vdEJlZm9yZSI6IDAsCiAgImRlZmF1bHRTaWduYXR1cmVBbGdvcml0aG0iOiAiUlMyNTYiLAogICJyZXZva2VSZWZyZXNoVG9rZW4iOiBmYWxzZSwKICAicmVmcmVzaFRva2VuTWF4UmV1c2UiOiAwLAogICJhY2Nlc3NUb2tlbkxpZmVzcGFuIjogNDMyMDAsCiAgImFjY2Vzc1Rva2VuTGlmZXNwYW5Gb3JJbXBsaWNpdEZsb3ciOiA5MDAsCiAgInNzb1Nlc3Npb25JZGxlVGltZW91dCI6IDg2NDAwLAogICJzc29TZXNzaW9uTWF4TGlmZXNwYW4iOiAzNjAwMCwKICAic3NvU2Vzc2lvbklkbGVUaW1lb3V0UmVtZW1iZXJNZSI6IDAsCiAgInNzb1Nlc3Npb25NYXhMaWZlc3BhblJlbWVtYmVyTWUiOiAwLAogICJvZmZsaW5lU2Vzc2lvbklkbGVUaW1lb3V0IjogMjU5MjAwMCwKICAib2ZmbGluZVNlc3Npb25NYXhMaWZlc3BhbkVuYWJsZWQiOiBmYWxzZSwKICAib2ZmbGluZVNlc3Npb25NYXhMaWZlc3BhbiI6IDUxODQwMDAsCiAgImNsaWVudFNlc3Npb25JZGxlVGltZW91dCI6IDAsCiAgImNsaWVudFNlc3Npb25NYXhMaWZlc3BhbiI6IDAsCiAgImNsaWVudE9mZmxpbmVTZXNzaW9uSWRsZVRpbWVvdXQiOiAwLAogICJjbGllbnRPZmZsaW5lU2Vzc2lvbk1heExpZmVzcGFuIjogMCwKICAiYWNjZXNzQ29kZUxpZmVzcGFuIjogNjAsCiAgImFjY2Vzc0NvZGVMaWZlc3BhblVzZXJBY3Rpb24iOiAzMDAsCiAgImFjY2Vzc0NvZGVMaWZlc3BhbkxvZ2luIjogMTgwMCwKICAiYWN0aW9uVG9rZW5HZW5lcmF0ZWRCeUFkbWluTGlmZXNwYW4iOiA0MzIwMCwKICAiYWN0aW9uVG9rZW5HZW5lcmF0ZWRCeVVzZXJMaWZlc3BhbiI6IDMwMCwKICAib2F1dGgyRGV2aWNlQ29kZUxpZmVzcGFuIjogNjAwLAogICJvYXV0aDJEZXZpY2VQb2xsaW5nSW50ZXJ2YWwiOiA1LAogICJlbmFibGVkIjogdHJ1ZSwKICAic3NsUmVxdWlyZWQiOiAiZXh0ZXJuYWwiLAogICJyZWdpc3RyYXRpb25BbGxvd2VkIjogdHJ1ZSwKICAicmVnaXN0cmF0aW9uRW1haWxBc1VzZXJuYW1lIjogZmFsc2UsCiAgInJlbWVtYmVyTWUiOiB0cnVlLAogICJ2ZXJpZnlFbWFpbCI6IGZhbHNlLAogICJsb2dpbldpdGhFbWFpbEFsbG93ZWQiOiB0cnVlLAogICJkdXBsaWNhdGVFbWFpbHNBbGxvd2VkIjogZmFsc2UsCiAgInJlc2V0UGFzc3dvcmRBbGxvd2VkIjogdHJ1ZSwKICAiZWRpdFVzZXJuYW1lQWxsb3dlZCI6IGZhbHNlLAogICJicnV0ZUZvcmNlUHJvdGVjdGVkIjogZmFsc2UsCiAgInBlcm1hbmVudExvY2tvdXQiOiBmYWxzZSwKICAibWF4VGVtcG9yYXJ5TG9ja291dHMiOiAwLAogICJicnV0ZUZvcmNlU3RyYXRlZ3kiOiAiTVVMVElQTEUiLAogICJtYXhGYWlsdXJlV2FpdFNlY29uZHMiOiA5MDAsCiAgIm1pbmltdW1RdWlja0xvZ2luV2FpdFNlY29uZHMiOiA2MCwKICAid2FpdEluY3JlbWVudFNlY29uZHMiOiA2MCwKICAicXVpY2tMb2dpbkNoZWNrTWlsbGlTZWNvbmRzIjogMTAwMCwKICAibWF4RGVsdGFUaW1lU2Vjb25kcyI6IDQzMjAwLAogICJmYWlsdXJlRmFjdG9yIjogMzAsCiAgInVzZXJzIjogWwogICAgewogICAgICAidXNlcm5hbWUiOiAiaXp6eSIsCiAgICAgICJmaXJzdE5hbWUiOiAiaXp6eSIsCiAgICAgICJsYXN0TmFtZSI6ICJpenp5IiwKICAgICAgImVtYWlsIjogIml6enlAZ21haWwuY29tIiwKICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAiY3JlZGVudGlhbHMiOiBbCiAgICAgICAgewogICAgICAgICAgInR5cGUiOiAicGFzc3dvcmQiLAogICAgICAgICAgInZhbHVlIjogIml6enkiCiAgICAgICAgfQogICAgICBdCiAgICAgIH0KICBdLAogICJyb2xlcyI6IHsKICAgICJyZWFsbSI6IFsKICAgICAgewogICAgICAgICJpZCI6ICI0OGUxOWMyYy02MzQzLTQ1MzAtYWU3MC02Y2ZjMTMwOTIyNDAiLAogICAgICAgICJuYW1lIjogImRlZmF1bHQtcm9sZXMtZGV2IiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX2RlZmF1bHQtcm9sZXN9IiwKICAgICAgICAiY29tcG9zaXRlIjogdHJ1ZSwKICAgICAgICAiY29tcG9zaXRlcyI6IHsKICAgICAgICAgICJyZWFsbSI6IFsKICAgICAgICAgICAgIm9mZmxpbmVfYWNjZXNzIiwKICAgICAgICAgICAgInVtYV9hdXRob3JpemF0aW9uIgogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgImNsaWVudFJvbGUiOiBmYWxzZSwKICAgICAgICAiY29udGFpbmVySWQiOiAiM2IxOTVlNDEtOTBhMS00Zjg1LWI0MzQtY2E5NjNmNDE4NDg4IiwKICAgICAgICAiYXR0cmlidXRlcyI6IHt9CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAiaWQiOiAiYWMxYTM5NDgtNmFlOC00ZGZiLTg1MjUtMzIyOWRhOWQ5NDExIiwKICAgICAgICAibmFtZSI6ICJ1bWFfYXV0aG9yaXphdGlvbiIsCiAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV91bWFfYXV0aG9yaXphdGlvbn0iLAogICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAiY2xpZW50Um9sZSI6IGZhbHNlLAogICAgICAgICJjb250YWluZXJJZCI6ICIzYjE5NWU0MS05MGExLTRmODUtYjQzNC1jYTk2M2Y0MTg0ODgiLAogICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgfSwKICAgICAgewogICAgICAgICJpZCI6ICJkYzBhZTdhZS05NWZiLTQ1NjQtODNiZi1iMGRhYjg0NjBjMmQiLAogICAgICAgICJuYW1lIjogIm9mZmxpbmVfYWNjZXNzIiwKICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX29mZmxpbmUtYWNjZXNzfSIsCiAgICAgICAgImNvbXBvc2l0ZSI6IGZhbHNlLAogICAgICAgICJjbGllbnRSb2xlIjogZmFsc2UsCiAgICAgICAgImNvbnRhaW5lcklkIjogIjNiMTk1ZTQxLTkwYTEtNGY4NS1iNDM0LWNhOTYzZjQxODQ4OCIsCiAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICB9CiAgICBdLAogICAgImNsaWVudCI6IHsKICAgICAgInJlYWxtLW1hbmFnZW1lbnQiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogImE1ZGEwZDcyLWY0OTQtNGY4OC1iZWQ0LTQ1ZDBiYTlmNzc2NCIsCiAgICAgICAgICAibmFtZSI6ICJxdWVyeS1yZWFsbXMiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV9xdWVyeS1yZWFsbXN9IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjk2ZGQ5NWZkLWRjZGUtNDQ4OS05OTgwLWYzMjhlZmM1NzM1NCIsCiAgICAgICAgICAibmFtZSI6ICJtYW5hZ2UtY2xpZW50cyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX21hbmFnZS1jbGllbnRzfSIsCiAgICAgICAgICAiY29tcG9zaXRlIjogZmFsc2UsCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICI4ZjhkMzY5NS1hNjFlLTRlYjMtOGY5YS1hOTFlNmJiYmEzMmEiLAogICAgICAgICAgIm5hbWUiOiAibWFuYWdlLXJlYWxtIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIke3JvbGVfbWFuYWdlLXJlYWxtfSIsCiAgICAgICAgICAiY29tcG9zaXRlIjogZmFsc2UsCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJlMzY5OTg4Ny1lYmY2LTRiNjUtODljOC1hODM5YTE4OWUwZWQiLAogICAgICAgICAgIm5hbWUiOiAicXVlcnktZ3JvdXBzIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIke3JvbGVfcXVlcnktZ3JvdXBzfSIsCiAgICAgICAgICAiY29tcG9zaXRlIjogZmFsc2UsCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICI3Mzk1OGU4My04MDI3LTQ1MDUtYjc2Yi1jNDc4ZTkyYjdmODgiLAogICAgICAgICAgIm5hbWUiOiAibWFuYWdlLWF1dGhvcml6YXRpb24iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV9tYW5hZ2UtYXV0aG9yaXphdGlvbn0iLAogICAgICAgICAgImNvbXBvc2l0ZSI6IGZhbHNlLAogICAgICAgICAgImNsaWVudFJvbGUiOiB0cnVlLAogICAgICAgICAgImNvbnRhaW5lcklkIjogIjE4NTM0YjU4LWMyMjEtNDQzNC05YjUxLTBlNzE5NmU4ZDVmNCIsCiAgICAgICAgICAiYXR0cmlidXRlcyI6IHt9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiNDRjMWFjZWQtNDM2OS00YjVkLWIzZTItODg3OTgxNTcxNTY0IiwKICAgICAgICAgICJuYW1lIjogIm1hbmFnZS1pZGVudGl0eS1wcm92aWRlcnMiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV9tYW5hZ2UtaWRlbnRpdHktcHJvdmlkZXJzfSIsCiAgICAgICAgICAiY29tcG9zaXRlIjogZmFsc2UsCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJmMWUyNWFmZi04YTkyLTRmMzMtYmRhMS0zZTJmYmU1ZmFhNzAiLAogICAgICAgICAgIm5hbWUiOiAicXVlcnktY2xpZW50cyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX3F1ZXJ5LWNsaWVudHN9IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjI5ZDc4NGI2LTRhNTgtNDkxYy05ZGNkLWZlMmYyOGY0NDAyMCIsCiAgICAgICAgICAibmFtZSI6ICJ2aWV3LXVzZXJzIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIke3JvbGVfdmlldy11c2Vyc30iLAogICAgICAgICAgImNvbXBvc2l0ZSI6IHRydWUsCiAgICAgICAgICAiY29tcG9zaXRlcyI6IHsKICAgICAgICAgICAgImNsaWVudCI6IHsKICAgICAgICAgICAgICAicmVhbG0tbWFuYWdlbWVudCI6IFsKICAgICAgICAgICAgICAgICJxdWVyeS1ncm91cHMiLAogICAgICAgICAgICAgICAgInF1ZXJ5LXVzZXJzIgogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjI2MjliNDUyLWFjOTUtNDU1OS04ZjA0LWI1YzIwYWJkZTYxMCIsCiAgICAgICAgICAibmFtZSI6ICJ2aWV3LWF1dGhvcml6YXRpb24iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV92aWV3LWF1dGhvcml6YXRpb259IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjkwYmE2ZjY1LWMyMTMtNGFkNi05OTFkLThiYWJjMjE3M2Q0ZCIsCiAgICAgICAgICAibmFtZSI6ICJ2aWV3LWNsaWVudHMiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV92aWV3LWNsaWVudHN9IiwKICAgICAgICAgICJjb21wb3NpdGUiOiB0cnVlLAogICAgICAgICAgImNvbXBvc2l0ZXMiOiB7CiAgICAgICAgICAgICJjbGllbnQiOiB7CiAgICAgICAgICAgICAgInJlYWxtLW1hbmFnZW1lbnQiOiBbCiAgICAgICAgICAgICAgICAicXVlcnktY2xpZW50cyIKICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJkZThkMTI5Ni05NTBjLTRkNjAtYTZiZS0xZDI3MmEyZjlkMzgiLAogICAgICAgICAgIm5hbWUiOiAibWFuYWdlLWV2ZW50cyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX21hbmFnZS1ldmVudHN9IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjZiNWMyZThmLTVjYjAtNGZjOC04MzkyLTg3ZDcwYWMxMTk1MyIsCiAgICAgICAgICAibmFtZSI6ICJyZWFsbS1hZG1pbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX3JlYWxtLWFkbWlufSIsCiAgICAgICAgICAiY29tcG9zaXRlIjogdHJ1ZSwKICAgICAgICAgICJjb21wb3NpdGVzIjogewogICAgICAgICAgICAiY2xpZW50IjogewogICAgICAgICAgICAgICJyZWFsbS1tYW5hZ2VtZW50IjogWwogICAgICAgICAgICAgICAgInF1ZXJ5LXJlYWxtcyIsCiAgICAgICAgICAgICAgICAibWFuYWdlLXJlYWxtIiwKICAgICAgICAgICAgICAgICJtYW5hZ2UtY2xpZW50cyIsCiAgICAgICAgICAgICAgICAicXVlcnktZ3JvdXBzIiwKICAgICAgICAgICAgICAgICJtYW5hZ2UtaWRlbnRpdHktcHJvdmlkZXJzIiwKICAgICAgICAgICAgICAgICJtYW5hZ2UtYXV0aG9yaXphdGlvbiIsCiAgICAgICAgICAgICAgICAicXVlcnktY2xpZW50cyIsCiAgICAgICAgICAgICAgICAidmlldy11c2VycyIsCiAgICAgICAgICAgICAgICAidmlldy1hdXRob3JpemF0aW9uIiwKICAgICAgICAgICAgICAgICJ2aWV3LWNsaWVudHMiLAogICAgICAgICAgICAgICAgInZpZXctcmVhbG0iLAogICAgICAgICAgICAgICAgIm1hbmFnZS1ldmVudHMiLAogICAgICAgICAgICAgICAgImNyZWF0ZS1jbGllbnQiLAogICAgICAgICAgICAgICAgInZpZXctaWRlbnRpdHktcHJvdmlkZXJzIiwKICAgICAgICAgICAgICAgICJxdWVyeS11c2VycyIsCiAgICAgICAgICAgICAgICAibWFuYWdlLXVzZXJzIiwKICAgICAgICAgICAgICAgICJpbXBlcnNvbmF0aW9uIiwKICAgICAgICAgICAgICAgICJ2aWV3LWV2ZW50cyIKICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICIzNDQ4YWZiOC00NTZlLTRkMjYtYjc5Yi04NzE1Y2NlMDJmNWQiLAogICAgICAgICAgIm5hbWUiOiAidmlldy1yZWFsbSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX3ZpZXctcmVhbG19IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjk5NDI1MzQxLTEyNjYtNDEyZS05YTY3LTViMDEzYjkwMmJjMyIsCiAgICAgICAgICAibmFtZSI6ICJjcmVhdGUtY2xpZW50IiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIke3JvbGVfY3JlYXRlLWNsaWVudH0iLAogICAgICAgICAgImNvbXBvc2l0ZSI6IGZhbHNlLAogICAgICAgICAgImNsaWVudFJvbGUiOiB0cnVlLAogICAgICAgICAgImNvbnRhaW5lcklkIjogIjE4NTM0YjU4LWMyMjEtNDQzNC05YjUxLTBlNzE5NmU4ZDVmNCIsCiAgICAgICAgICAiYXR0cmlidXRlcyI6IHt9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiMjhhNDE2ZTQtMWJjNS00YjQxLWFjNjMtZjM2N2Y4MDJhNmIxIiwKICAgICAgICAgICJuYW1lIjogInZpZXctaWRlbnRpdHktcHJvdmlkZXJzIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICIke3JvbGVfdmlldy1pZGVudGl0eS1wcm92aWRlcnN9IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImM4YmVkZjNhLTU4MTgtNDQyNy1iOGZmLWYzNDFjOTc0NjVlOSIsCiAgICAgICAgICAibmFtZSI6ICJtYW5hZ2UtdXNlcnMiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV9tYW5hZ2UtdXNlcnN9IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjg3MWQxMGNjLTEwYjgtNGZiYy1hZjNkLWUyZjIzZjdmMjkyNyIsCiAgICAgICAgICAibmFtZSI6ICJxdWVyeS11c2VycyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX3F1ZXJ5LXVzZXJzfSIsCiAgICAgICAgICAiY29tcG9zaXRlIjogZmFsc2UsCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICIyYWVkZjc4MC04MDlkLTRlNjgtODdjNy1lMmFlYjE1YmMxZDEiLAogICAgICAgICAgIm5hbWUiOiAiaW1wZXJzb25hdGlvbiIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX2ltcGVyc29uYXRpb259IiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjA1ZGNkMjU5LTRhY2MtNGQzZC04YTcyLTc3ZGUyYWMzYjM4YSIsCiAgICAgICAgICAibmFtZSI6ICJ2aWV3LWV2ZW50cyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiJHtyb2xlX3ZpZXctZXZlbnRzfSIsCiAgICAgICAgICAiY29tcG9zaXRlIjogZmFsc2UsCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiMTg1MzRiNTgtYzIyMS00NDM0LTliNTEtMGU3MTk2ZThkNWY0IiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJzZWN1cml0eS1hZG1pbi1jb25zb2xlIjogW10sCiAgICAgICJzZXJ2aWNlIjogW10sCiAgICAgICJhZG1pbi1jbGkiOiBbXSwKICAgICAgImFjY291bnQtY29uc29sZSI6IFtdLAogICAgICAiYnJva2VyIjogW10sCiAgICAgICJhY2NvdW50IjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICIwZmZmZDNiMS03ZWE3LTRlYTYtYjI0Ny02NTZhNzU5NjZmNjYiLAogICAgICAgICAgIm5hbWUiOiAiZGVsZXRlLWFjY291bnQiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIiR7cm9sZV9kZWxldGUtYWNjb3VudH0iLAogICAgICAgICAgImNvbXBvc2l0ZSI6IGZhbHNlLAogICAgICAgICAgImNsaWVudFJvbGUiOiB0cnVlLAogICAgICAgICAgImNvbnRhaW5lcklkIjogIjgzNzRjM2FlLWI4ZTEtNDg1Ny04YWM2LWJjYjU1MTEzNDllZCIsCiAgICAgICAgICAiYXR0cmlidXRlcyI6IHt9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiN2M2NDYzOWMtYzNkZS00YmRkLWIzZjYtZjE2YWJmZGQwMmIzIiwKICAgICAgICAgICJuYW1lIjogInZpZXctZ3JvdXBzIiwKICAgICAgICAgICJjb21wb3NpdGUiOiBmYWxzZSwKICAgICAgICAgICJjbGllbnRSb2xlIjogdHJ1ZSwKICAgICAgICAgICJjb250YWluZXJJZCI6ICI4Mzc0YzNhZS1iOGUxLTQ4NTctOGFjNi1iY2I1NTExMzQ5ZWQiLAogICAgICAgICAgImF0dHJpYnV0ZXMiOiB7fQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImE1ZTUwNzIyLTQzMTItNGVkMi1hM2Q5LTFiNWE3ZGIzNTkzOSIsCiAgICAgICAgICAibmFtZSI6ICJtYW5hZ2UtYWNjb3VudCIsCiAgICAgICAgICAiY29tcG9zaXRlIjogZmFsc2UsCiAgICAgICAgICAiY2xpZW50Um9sZSI6IHRydWUsCiAgICAgICAgICAiY29udGFpbmVySWQiOiAiODM3NGMzYWUtYjhlMS00ODU3LThhYzYtYmNiNTUxMTM0OWVkIiwKICAgICAgICAgICJhdHRyaWJ1dGVzIjoge30KICAgICAgICB9CiAgICAgIF0KICAgIH0KICB9LAogICJncm91cHMiOiBbXSwKICAiZGVmYXVsdFJvbGUiOiB7CiAgICAiaWQiOiAiNDhlMTljMmMtNjM0My00NTMwLWFlNzAtNmNmYzEzMDkyMjQwIiwKICAgICJuYW1lIjogImRlZmF1bHQtcm9sZXMtZGV2IiwKICAgICJkZXNjcmlwdGlvbiI6ICIke3JvbGVfZGVmYXVsdC1yb2xlc30iLAogICAgImNvbXBvc2l0ZSI6IHRydWUsCiAgICAiY2xpZW50Um9sZSI6IGZhbHNlLAogICAgImNvbnRhaW5lcklkIjogIjNiMTk1ZTQxLTkwYTEtNGY4NS1iNDM0LWNhOTYzZjQxODQ4OCIKICB9LAogICJyZXF1aXJlZENyZWRlbnRpYWxzIjogWwogICAgInBhc3N3b3JkIgogIF0sCiAgIm90cFBvbGljeVR5cGUiOiAidG90cCIsCiAgIm90cFBvbGljeUFsZ29yaXRobSI6ICJIbWFjU0hBMSIsCiAgIm90cFBvbGljeUluaXRpYWxDb3VudGVyIjogMCwKICAib3RwUG9saWN5RGlnaXRzIjogNiwKICAib3RwUG9saWN5TG9va0FoZWFkV2luZG93IjogMSwKICAib3RwUG9saWN5UGVyaW9kIjogMzAsCiAgIm90cFBvbGljeUNvZGVSZXVzYWJsZSI6IGZhbHNlLAogICJvdHBTdXBwb3J0ZWRBcHBsaWNhdGlvbnMiOiBbCiAgICAidG90cEFwcEZyZWVPVFBOYW1lIiwKICAgICJ0b3RwQXBwR29vZ2xlTmFtZSIsCiAgICAidG90cEFwcE1pY3Jvc29mdEF1dGhlbnRpY2F0b3JOYW1lIgogIF0sCiAgImxvY2FsaXphdGlvblRleHRzIjoge30sCiAgIndlYkF1dGhuUG9saWN5UnBFbnRpdHlOYW1lIjogImtleWNsb2FrIiwKICAid2ViQXV0aG5Qb2xpY3lTaWduYXR1cmVBbGdvcml0aG1zIjogWwogICAgIkVTMjU2IiwKICAgICJSUzI1NiIKICBdLAogICJ3ZWJBdXRoblBvbGljeVJwSWQiOiAiIiwKICAid2ViQXV0aG5Qb2xpY3lBdHRlc3RhdGlvbkNvbnZleWFuY2VQcmVmZXJlbmNlIjogIm5vdCBzcGVjaWZpZWQiLAogICJ3ZWJBdXRoblBvbGljeUF1dGhlbnRpY2F0b3JBdHRhY2htZW50IjogIm5vdCBzcGVjaWZpZWQiLAogICJ3ZWJBdXRoblBvbGljeVJlcXVpcmVSZXNpZGVudEtleSI6ICJub3Qgc3BlY2lmaWVkIiwKICAid2ViQXV0aG5Qb2xpY3lVc2VyVmVyaWZpY2F0aW9uUmVxdWlyZW1lbnQiOiAibm90IHNwZWNpZmllZCIsCiAgIndlYkF1dGhuUG9saWN5Q3JlYXRlVGltZW91dCI6IDAsCiAgIndlYkF1dGhuUG9saWN5QXZvaWRTYW1lQXV0aGVudGljYXRvclJlZ2lzdGVyIjogZmFsc2UsCiAgIndlYkF1dGhuUG9saWN5QWNjZXB0YWJsZUFhZ3VpZHMiOiBbXSwKICAid2ViQXV0aG5Qb2xpY3lFeHRyYU9yaWdpbnMiOiBbXSwKICAid2ViQXV0aG5Qb2xpY3lQYXNzd29yZGxlc3NScEVudGl0eU5hbWUiOiAia2V5Y2xvYWsiLAogICJ3ZWJBdXRoblBvbGljeVBhc3N3b3JkbGVzc1NpZ25hdHVyZUFsZ29yaXRobXMiOiBbCiAgICAiRVMyNTYiLAogICAgIlJTMjU2IgogIF0sCiAgIndlYkF1dGhuUG9saWN5UGFzc3dvcmRsZXNzUnBJZCI6ICIiLAogICJ3ZWJBdXRoblBvbGljeVBhc3N3b3JkbGVzc0F0dGVzdGF0aW9uQ29udmV5YW5jZVByZWZlcmVuY2UiOiAibm90IHNwZWNpZmllZCIsCiAgIndlYkF1dGhuUG9saWN5UGFzc3dvcmRsZXNzQXV0aGVudGljYXRvckF0dGFjaG1lbnQiOiAibm90IHNwZWNpZmllZCIsCiAgIndlYkF1dGhuUG9saWN5UGFzc3dvcmRsZXNzUmVxdWlyZVJlc2lkZW50S2V5IjogIm5vdCBzcGVjaWZpZWQiLAogICJ3ZWJBdXRoblBvbGljeVBhc3N3b3JkbGVzc1VzZXJWZXJpZmljYXRpb25SZXF1aXJlbWVudCI6ICJub3Qgc3BlY2lmaWVkIiwKICAid2ViQXV0aG5Qb2xpY3lQYXNzd29yZGxlc3NDcmVhdGVUaW1lb3V0IjogMCwKICAid2ViQXV0aG5Qb2xpY3lQYXNzd29yZGxlc3NBdm9pZFNhbWVBdXRoZW50aWNhdG9yUmVnaXN0ZXIiOiBmYWxzZSwKICAid2ViQXV0aG5Qb2xpY3lQYXNzd29yZGxlc3NBY2NlcHRhYmxlQWFndWlkcyI6IFtdLAogICJ3ZWJBdXRoblBvbGljeVBhc3N3b3JkbGVzc0V4dHJhT3JpZ2lucyI6IFtdLAogICJzY29wZU1hcHBpbmdzIjogWwogICAgewogICAgICAiY2xpZW50U2NvcGUiOiAib2ZmbGluZV9hY2Nlc3MiLAogICAgICAicm9sZXMiOiBbCiAgICAgICAgIm9mZmxpbmVfYWNjZXNzIgogICAgICBdCiAgICB9CiAgXSwKICAiY2xpZW50U2NvcGVNYXBwaW5ncyI6IHsKICAgICJhY2NvdW50IjogWwogICAgICB7CiAgICAgICAgImNsaWVudCI6ICJhY2NvdW50LWNvbnNvbGUiLAogICAgICAgICJyb2xlcyI6IFsKICAgICAgICAgICJtYW5hZ2UtYWNjb3VudCIsCiAgICAgICAgICAidmlldy1ncm91cHMiCiAgICAgICAgXQogICAgICB9CiAgICBdCiAgfSwKICAiY2xpZW50cyI6IFsKICAgIHsKICAgICAgImlkIjogIjgzNzRjM2FlLWI4ZTEtNDg1Ny04YWM2LWJjYjU1MTEzNDllZCIsCiAgICAgICJjbGllbnRJZCI6ICJhY2NvdW50IiwKICAgICAgIm5hbWUiOiAiJHtjbGllbnRfYWNjb3VudH0iLAogICAgICAicm9vdFVybCI6ICIke2F1dGhCYXNlVXJsfSIsCiAgICAgICJiYXNlVXJsIjogIi9yZWFsbXMvZGV2L2FjY291bnQvIiwKICAgICAgInN1cnJvZ2F0ZUF1dGhSZXF1aXJlZCI6IGZhbHNlLAogICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICJhbHdheXNEaXNwbGF5SW5Db25zb2xlIjogZmFsc2UsCiAgICAgICJjbGllbnRBdXRoZW50aWNhdG9yVHlwZSI6ICJjbGllbnQtc2VjcmV0IiwKICAgICAgInJlZGlyZWN0VXJpcyI6IFsKICAgICAgICAiL3JlYWxtcy9kZXYvYWNjb3VudC8qIgogICAgICBdLAogICAgICAid2ViT3JpZ2lucyI6IFtdLAogICAgICAibm90QmVmb3JlIjogMCwKICAgICAgImJlYXJlck9ubHkiOiBmYWxzZSwKICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAic3RhbmRhcmRGbG93RW5hYmxlZCI6IHRydWUsCiAgICAgICJpbXBsaWNpdEZsb3dFbmFibGVkIjogZmFsc2UsCiAgICAgICJkaXJlY3RBY2Nlc3NHcmFudHNFbmFibGVkIjogZmFsc2UsCiAgICAgICJzZXJ2aWNlQWNjb3VudHNFbmFibGVkIjogZmFsc2UsCiAgICAgICJwdWJsaWNDbGllbnQiOiB0cnVlLAogICAgICAiZnJvbnRjaGFubmVsTG9nb3V0IjogZmFsc2UsCiAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICJhdHRyaWJ1dGVzIjogewogICAgICAgICJyZWFsbV9jbGllbnQiOiAiZmFsc2UiLAogICAgICAgICJwb3N0LmxvZ291dC5yZWRpcmVjdC51cmlzIjogIisiCiAgICAgIH0sCiAgICAgICJhdXRoZW50aWNhdGlvbkZsb3dCaW5kaW5nT3ZlcnJpZGVzIjoge30sCiAgICAgICJmdWxsU2NvcGVBbGxvd2VkIjogZmFsc2UsCiAgICAgICJub2RlUmVSZWdpc3RyYXRpb25UaW1lb3V0IjogMCwKICAgICAgImRlZmF1bHRDbGllbnRTY29wZXMiOiBbCiAgICAgICAgIndlYi1vcmlnaW5zIiwKICAgICAgICAiYWNyIiwKICAgICAgICAicm9sZXMiLAogICAgICAgICJwcm9maWxlIiwKICAgICAgICAiYmFzaWMiLAogICAgICAgICJlbWFpbCIKICAgICAgXSwKICAgICAgIm9wdGlvbmFsQ2xpZW50U2NvcGVzIjogWwogICAgICAgICJhZGRyZXNzIiwKICAgICAgICAicGhvbmUiLAogICAgICAgICJvZmZsaW5lX2FjY2VzcyIsCiAgICAgICAgIm9yZ2FuaXphdGlvbiIsCiAgICAgICAgIm1pY3JvcHJvZmlsZS1qd3QiCiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICI2NjhjMTY1Mi1jNmM4LTRkODAtYTY0YS0yNDQ3MjIyZTNkZjkiLAogICAgICAiY2xpZW50SWQiOiAiYWNjb3VudC1jb25zb2xlIiwKICAgICAgIm5hbWUiOiAiJHtjbGllbnRfYWNjb3VudC1jb25zb2xlfSIsCiAgICAgICJyb290VXJsIjogIiR7YXV0aEJhc2VVcmx9IiwKICAgICAgImJhc2VVcmwiOiAiL3JlYWxtcy9kZXYvYWNjb3VudC8iLAogICAgICAic3Vycm9nYXRlQXV0aFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICJlbmFibGVkIjogdHJ1ZSwKICAgICAgImFsd2F5c0Rpc3BsYXlJbkNvbnNvbGUiOiBmYWxzZSwKICAgICAgImNsaWVudEF1dGhlbnRpY2F0b3JUeXBlIjogImNsaWVudC1zZWNyZXQiLAogICAgICAicmVkaXJlY3RVcmlzIjogWwogICAgICAgICIvcmVhbG1zL2Rldi9hY2NvdW50LyoiCiAgICAgIF0sCiAgICAgICJ3ZWJPcmlnaW5zIjogW10sCiAgICAgICJub3RCZWZvcmUiOiAwLAogICAgICAiYmVhcmVyT25seSI6IGZhbHNlLAogICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICJzdGFuZGFyZEZsb3dFbmFibGVkIjogdHJ1ZSwKICAgICAgImltcGxpY2l0Rmxvd0VuYWJsZWQiOiBmYWxzZSwKICAgICAgImRpcmVjdEFjY2Vzc0dyYW50c0VuYWJsZWQiOiBmYWxzZSwKICAgICAgInNlcnZpY2VBY2NvdW50c0VuYWJsZWQiOiBmYWxzZSwKICAgICAgInB1YmxpY0NsaWVudCI6IHRydWUsCiAgICAgICJmcm9udGNoYW5uZWxMb2dvdXQiOiBmYWxzZSwKICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgImF0dHJpYnV0ZXMiOiB7CiAgICAgICAgInJlYWxtX2NsaWVudCI6ICJmYWxzZSIsCiAgICAgICAgInBvc3QubG9nb3V0LnJlZGlyZWN0LnVyaXMiOiAiKyIsCiAgICAgICAgInBrY2UuY29kZS5jaGFsbGVuZ2UubWV0aG9kIjogIlMyNTYiCiAgICAgIH0sCiAgICAgICJhdXRoZW50aWNhdGlvbkZsb3dCaW5kaW5nT3ZlcnJpZGVzIjoge30sCiAgICAgICJmdWxsU2NvcGVBbGxvd2VkIjogZmFsc2UsCiAgICAgICJub2RlUmVSZWdpc3RyYXRpb25UaW1lb3V0IjogMCwKICAgICAgInByb3RvY29sTWFwcGVycyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZTI4YTMxOTYtNGM2MC00YTY4LWI3ZTUtOTAwMGIzZWY3YTQ2IiwKICAgICAgICAgICJuYW1lIjogImF1ZGllbmNlIHJlc29sdmUiLAogICAgICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJvaWRjLWF1ZGllbmNlLXJlc29sdmUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7fQogICAgICAgIH0KICAgICAgXSwKICAgICAgImRlZmF1bHRDbGllbnRTY29wZXMiOiBbCiAgICAgICAgIndlYi1vcmlnaW5zIiwKICAgICAgICAiYWNyIiwKICAgICAgICAicm9sZXMiLAogICAgICAgICJwcm9maWxlIiwKICAgICAgICAiYmFzaWMiLAogICAgICAgICJlbWFpbCIKICAgICAgXSwKICAgICAgIm9wdGlvbmFsQ2xpZW50U2NvcGVzIjogWwogICAgICAgICJhZGRyZXNzIiwKICAgICAgICAicGhvbmUiLAogICAgICAgICJvZmZsaW5lX2FjY2VzcyIsCiAgICAgICAgIm9yZ2FuaXphdGlvbiIsCiAgICAgICAgIm1pY3JvcHJvZmlsZS1qd3QiCiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICI5NzE4MmUyMS05OWQ3LTQ5OGQtYjMyYS00NzNhMTA4NGUxMGEiLAogICAgICAiY2xpZW50SWQiOiAiYWRtaW4tY2xpIiwKICAgICAgIm5hbWUiOiAiJHtjbGllbnRfYWRtaW4tY2xpfSIsCiAgICAgICJzdXJyb2dhdGVBdXRoUmVxdWlyZWQiOiBmYWxzZSwKICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAiYWx3YXlzRGlzcGxheUluQ29uc29sZSI6IGZhbHNlLAogICAgICAiY2xpZW50QXV0aGVudGljYXRvclR5cGUiOiAiY2xpZW50LXNlY3JldCIsCiAgICAgICJyZWRpcmVjdFVyaXMiOiBbXSwKICAgICAgIndlYk9yaWdpbnMiOiBbXSwKICAgICAgIm5vdEJlZm9yZSI6IDAsCiAgICAgICJiZWFyZXJPbmx5IjogZmFsc2UsCiAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgInN0YW5kYXJkRmxvd0VuYWJsZWQiOiBmYWxzZSwKICAgICAgImltcGxpY2l0Rmxvd0VuYWJsZWQiOiBmYWxzZSwKICAgICAgImRpcmVjdEFjY2Vzc0dyYW50c0VuYWJsZWQiOiB0cnVlLAogICAgICAic2VydmljZUFjY291bnRzRW5hYmxlZCI6IGZhbHNlLAogICAgICAicHVibGljQ2xpZW50IjogdHJ1ZSwKICAgICAgImZyb250Y2hhbm5lbExvZ291dCI6IGZhbHNlLAogICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAicmVhbG1fY2xpZW50IjogImZhbHNlIiwKICAgICAgICAiY2xpZW50LnVzZS5saWdodHdlaWdodC5hY2Nlc3MudG9rZW4uZW5hYmxlZCI6ICJ0cnVlIiwKICAgICAgICAicG9zdC5sb2dvdXQucmVkaXJlY3QudXJpcyI6ICIrIgogICAgICB9LAogICAgICAiYXV0aGVudGljYXRpb25GbG93QmluZGluZ092ZXJyaWRlcyI6IHt9LAogICAgICAiZnVsbFNjb3BlQWxsb3dlZCI6IHRydWUsCiAgICAgICJub2RlUmVSZWdpc3RyYXRpb25UaW1lb3V0IjogMCwKICAgICAgImRlZmF1bHRDbGllbnRTY29wZXMiOiBbCiAgICAgICAgIndlYi1vcmlnaW5zIiwKICAgICAgICAiYWNyIiwKICAgICAgICAicm9sZXMiLAogICAgICAgICJwcm9maWxlIiwKICAgICAgICAiYmFzaWMiLAogICAgICAgICJlbWFpbCIKICAgICAgXSwKICAgICAgIm9wdGlvbmFsQ2xpZW50U2NvcGVzIjogWwogICAgICAgICJhZGRyZXNzIiwKICAgICAgICAicGhvbmUiLAogICAgICAgICJvZmZsaW5lX2FjY2VzcyIsCiAgICAgICAgIm9yZ2FuaXphdGlvbiIsCiAgICAgICAgIm1pY3JvcHJvZmlsZS1qd3QiCiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIzMTNkZmFjZi0yOWU3LTQxNDYtODMyZi1jYjkwMDBmMDNiZGIiLAogICAgICAiY2xpZW50SWQiOiAiYnJva2VyIiwKICAgICAgIm5hbWUiOiAiJHtjbGllbnRfYnJva2VyfSIsCiAgICAgICJzdXJyb2dhdGVBdXRoUmVxdWlyZWQiOiBmYWxzZSwKICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAiYWx3YXlzRGlzcGxheUluQ29uc29sZSI6IGZhbHNlLAogICAgICAiY2xpZW50QXV0aGVudGljYXRvclR5cGUiOiAiY2xpZW50LXNlY3JldCIsCiAgICAgICJyZWRpcmVjdFVyaXMiOiBbXSwKICAgICAgIndlYk9yaWdpbnMiOiBbXSwKICAgICAgIm5vdEJlZm9yZSI6IDAsCiAgICAgICJiZWFyZXJPbmx5IjogdHJ1ZSwKICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAic3RhbmRhcmRGbG93RW5hYmxlZCI6IHRydWUsCiAgICAgICJpbXBsaWNpdEZsb3dFbmFibGVkIjogZmFsc2UsCiAgICAgICJkaXJlY3RBY2Nlc3NHcmFudHNFbmFibGVkIjogZmFsc2UsCiAgICAgICJzZXJ2aWNlQWNjb3VudHNFbmFibGVkIjogZmFsc2UsCiAgICAgICJwdWJsaWNDbGllbnQiOiBmYWxzZSwKICAgICAgImZyb250Y2hhbm5lbExvZ291dCI6IGZhbHNlLAogICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAicmVhbG1fY2xpZW50IjogInRydWUiLAogICAgICAgICJwb3N0LmxvZ291dC5yZWRpcmVjdC51cmlzIjogIisiCiAgICAgIH0sCiAgICAgICJhdXRoZW50aWNhdGlvbkZsb3dCaW5kaW5nT3ZlcnJpZGVzIjoge30sCiAgICAgICJmdWxsU2NvcGVBbGxvd2VkIjogZmFsc2UsCiAgICAgICJub2RlUmVSZWdpc3RyYXRpb25UaW1lb3V0IjogMCwKICAgICAgImRlZmF1bHRDbGllbnRTY29wZXMiOiBbCiAgICAgICAgIndlYi1vcmlnaW5zIiwKICAgICAgICAiYWNyIiwKICAgICAgICAicm9sZXMiLAogICAgICAgICJwcm9maWxlIiwKICAgICAgICAiYmFzaWMiLAogICAgICAgICJlbWFpbCIKICAgICAgXSwKICAgICAgIm9wdGlvbmFsQ2xpZW50U2NvcGVzIjogWwogICAgICAgICJhZGRyZXNzIiwKICAgICAgICAicGhvbmUiLAogICAgICAgICJvZmZsaW5lX2FjY2VzcyIsCiAgICAgICAgIm9yZ2FuaXphdGlvbiIsCiAgICAgICAgIm1pY3JvcHJvZmlsZS1qd3QiCiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIxODUzNGI1OC1jMjIxLTQ0MzQtOWI1MS0wZTcxOTZlOGQ1ZjQiLAogICAgICAiY2xpZW50SWQiOiAicmVhbG0tbWFuYWdlbWVudCIsCiAgICAgICJuYW1lIjogIiR7Y2xpZW50X3JlYWxtLW1hbmFnZW1lbnR9IiwKICAgICAgInN1cnJvZ2F0ZUF1dGhSZXF1aXJlZCI6IGZhbHNlLAogICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICJhbHdheXNEaXNwbGF5SW5Db25zb2xlIjogZmFsc2UsCiAgICAgICJjbGllbnRBdXRoZW50aWNhdG9yVHlwZSI6ICJjbGllbnQtc2VjcmV0IiwKICAgICAgInJlZGlyZWN0VXJpcyI6IFtdLAogICAgICAid2ViT3JpZ2lucyI6IFtdLAogICAgICAibm90QmVmb3JlIjogMCwKICAgICAgImJlYXJlck9ubHkiOiB0cnVlLAogICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICJzdGFuZGFyZEZsb3dFbmFibGVkIjogdHJ1ZSwKICAgICAgImltcGxpY2l0Rmxvd0VuYWJsZWQiOiBmYWxzZSwKICAgICAgImRpcmVjdEFjY2Vzc0dyYW50c0VuYWJsZWQiOiBmYWxzZSwKICAgICAgInNlcnZpY2VBY2NvdW50c0VuYWJsZWQiOiBmYWxzZSwKICAgICAgInB1YmxpY0NsaWVudCI6IGZhbHNlLAogICAgICAiZnJvbnRjaGFubmVsTG9nb3V0IjogZmFsc2UsCiAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICJhdHRyaWJ1dGVzIjogewogICAgICAgICJyZWFsbV9jbGllbnQiOiAidHJ1ZSIsCiAgICAgICAgInBvc3QubG9nb3V0LnJlZGlyZWN0LnVyaXMiOiAiKyIKICAgICAgfSwKICAgICAgImF1dGhlbnRpY2F0aW9uRmxvd0JpbmRpbmdPdmVycmlkZXMiOiB7fSwKICAgICAgImZ1bGxTY29wZUFsbG93ZWQiOiBmYWxzZSwKICAgICAgIm5vZGVSZVJlZ2lzdHJhdGlvblRpbWVvdXQiOiAwLAogICAgICAiZGVmYXVsdENsaWVudFNjb3BlcyI6IFsKICAgICAgICAid2ViLW9yaWdpbnMiLAogICAgICAgICJhY3IiLAogICAgICAgICJyb2xlcyIsCiAgICAgICAgInByb2ZpbGUiLAogICAgICAgICJiYXNpYyIsCiAgICAgICAgImVtYWlsIgogICAgICBdLAogICAgICAib3B0aW9uYWxDbGllbnRTY29wZXMiOiBbCiAgICAgICAgImFkZHJlc3MiLAogICAgICAgICJwaG9uZSIsCiAgICAgICAgIm9mZmxpbmVfYWNjZXNzIiwKICAgICAgICAib3JnYW5pemF0aW9uIiwKICAgICAgICAibWljcm9wcm9maWxlLWp3dCIKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjg2Mjc2ZTIyLTRmNjQtNDRhNi1iZTIzLThhM2IyZWQwNmVlOCIsCiAgICAgICJjbGllbnRJZCI6ICJzZWN1cml0eS1hZG1pbi1jb25zb2xlIiwKICAgICAgIm5hbWUiOiAiJHtjbGllbnRfc2VjdXJpdHktYWRtaW4tY29uc29sZX0iLAogICAgICAicm9vdFVybCI6ICIke2F1dGhBZG1pblVybH0iLAogICAgICAiYmFzZVVybCI6ICIvYWRtaW4vZGV2L2NvbnNvbGUvIiwKICAgICAgInN1cnJvZ2F0ZUF1dGhSZXF1aXJlZCI6IGZhbHNlLAogICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICJhbHdheXNEaXNwbGF5SW5Db25zb2xlIjogZmFsc2UsCiAgICAgICJjbGllbnRBdXRoZW50aWNhdG9yVHlwZSI6ICJjbGllbnQtc2VjcmV0IiwKICAgICAgInJlZGlyZWN0VXJpcyI6IFsKICAgICAgICAiL2FkbWluL2Rldi9jb25zb2xlLyoiCiAgICAgIF0sCiAgICAgICJ3ZWJPcmlnaW5zIjogWwogICAgICAgICIrIgogICAgICBdLAogICAgICAibm90QmVmb3JlIjogMCwKICAgICAgImJlYXJlck9ubHkiOiBmYWxzZSwKICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAic3RhbmRhcmRGbG93RW5hYmxlZCI6IHRydWUsCiAgICAgICJpbXBsaWNpdEZsb3dFbmFibGVkIjogZmFsc2UsCiAgICAgICJkaXJlY3RBY2Nlc3NHcmFudHNFbmFibGVkIjogZmFsc2UsCiAgICAgICJzZXJ2aWNlQWNjb3VudHNFbmFibGVkIjogZmFsc2UsCiAgICAgICJwdWJsaWNDbGllbnQiOiB0cnVlLAogICAgICAiZnJvbnRjaGFubmVsTG9nb3V0IjogZmFsc2UsCiAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICJhdHRyaWJ1dGVzIjogewogICAgICAgICJyZWFsbV9jbGllbnQiOiAiZmFsc2UiLAogICAgICAgICJjbGllbnQudXNlLmxpZ2h0d2VpZ2h0LmFjY2Vzcy50b2tlbi5lbmFibGVkIjogInRydWUiLAogICAgICAgICJwb3N0LmxvZ291dC5yZWRpcmVjdC51cmlzIjogIisiLAogICAgICAgICJwa2NlLmNvZGUuY2hhbGxlbmdlLm1ldGhvZCI6ICJTMjU2IgogICAgICB9LAogICAgICAiYXV0aGVudGljYXRpb25GbG93QmluZGluZ092ZXJyaWRlcyI6IHt9LAogICAgICAiZnVsbFNjb3BlQWxsb3dlZCI6IHRydWUsCiAgICAgICJub2RlUmVSZWdpc3RyYXRpb25UaW1lb3V0IjogMCwKICAgICAgInByb3RvY29sTWFwcGVycyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiNGVlODIxNDEtYjdiNy00YjY0LWJiZDYtYTYxNDNiM2RjMzBlIiwKICAgICAgICAgICJuYW1lIjogImxvY2FsZSIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogImxvY2FsZSIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAibG9jYWxlIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgICJkZWZhdWx0Q2xpZW50U2NvcGVzIjogWwogICAgICAgICJ3ZWItb3JpZ2lucyIsCiAgICAgICAgImFjciIsCiAgICAgICAgInJvbGVzIiwKICAgICAgICAicHJvZmlsZSIsCiAgICAgICAgImJhc2ljIiwKICAgICAgICAiZW1haWwiCiAgICAgIF0sCiAgICAgICJvcHRpb25hbENsaWVudFNjb3BlcyI6IFsKICAgICAgICAiYWRkcmVzcyIsCiAgICAgICAgInBob25lIiwKICAgICAgICAib2ZmbGluZV9hY2Nlc3MiLAogICAgICAgICJvcmdhbml6YXRpb24iLAogICAgICAgICJtaWNyb3Byb2ZpbGUtand0IgogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiMDMzZjExMTUtYmFmOC00Y2E2LTg3YjQtNWQyOTM4YmNjNjY1IiwKICAgICAgImNsaWVudElkIjogInNlcnZpY2UiLAogICAgICAibmFtZSI6ICJzZXJ2aWNlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJyb290VXJsIjogIiIsCiAgICAgICJhZG1pblVybCI6ICIiLAogICAgICAiYmFzZVVybCI6ICIiLAogICAgICAic3Vycm9nYXRlQXV0aFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICJlbmFibGVkIjogdHJ1ZSwKICAgICAgImFsd2F5c0Rpc3BsYXlJbkNvbnNvbGUiOiB0cnVlLAogICAgICAiY2xpZW50QXV0aGVudGljYXRvclR5cGUiOiAiY2xpZW50LXNlY3JldCIsCiAgICAgICJzZWNyZXQiOiAiWlFCenhJNUNVMzZVaVFtcld0RGJKa1kzVk9YNUxKUlkiLAogICAgICAicmVkaXJlY3RVcmlzIjogWwogICAgICAgICJodHRwOi8vbG9jYWxob3N0OjkwODAvKiIKICAgICAgXSwKICAgICAgIndlYk9yaWdpbnMiOiBbCiAgICAgICAgImh0dHA6Ly9sb2NhbGhvc3Q6OTA4MCIKICAgICAgXSwKICAgICAgIm5vdEJlZm9yZSI6IDAsCiAgICAgICJiZWFyZXJPbmx5IjogZmFsc2UsCiAgICAgICJjb25zZW50UmVxdWlyZWQiOiB0cnVlLAogICAgICAic3RhbmRhcmRGbG93RW5hYmxlZCI6IHRydWUsCiAgICAgICJpbXBsaWNpdEZsb3dFbmFibGVkIjogZmFsc2UsCiAgICAgICJkaXJlY3RBY2Nlc3NHcmFudHNFbmFibGVkIjogdHJ1ZSwKICAgICAgInNlcnZpY2VBY2NvdW50c0VuYWJsZWQiOiBmYWxzZSwKICAgICAgInB1YmxpY0NsaWVudCI6IGZhbHNlLAogICAgICAiZnJvbnRjaGFubmVsTG9nb3V0IjogdHJ1ZSwKICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgImF0dHJpYnV0ZXMiOiB7CiAgICAgICAgInJlYWxtX2NsaWVudCI6ICJmYWxzZSIsCiAgICAgICAgIm9pZGMuY2liYS5ncmFudC5lbmFibGVkIjogImZhbHNlIiwKICAgICAgICAiY2xpZW50LnNlY3JldC5jcmVhdGlvbi50aW1lIjogIjE3Mzc5MDE3ODMiLAogICAgICAgICJiYWNrY2hhbm5lbC5sb2dvdXQuc2Vzc2lvbi5yZXF1aXJlZCI6ICJ0cnVlIiwKICAgICAgICAibG9naW5fdGhlbWUiOiAia2V5Y2xvYWsudjIiLAogICAgICAgICJmcm9udGNoYW5uZWwubG9nb3V0LnNlc3Npb24ucmVxdWlyZWQiOiAidHJ1ZSIsCiAgICAgICAgInBvc3QubG9nb3V0LnJlZGlyZWN0LnVyaXMiOiAiaHR0cDovL2xvY2FsaG9zdDo5MDgwLyoiLAogICAgICAgICJkaXNwbGF5Lm9uLmNvbnNlbnQuc2NyZWVuIjogInRydWUiLAogICAgICAgICJvYXV0aDIuZGV2aWNlLmF1dGhvcml6YXRpb24uZ3JhbnQuZW5hYmxlZCI6ICJmYWxzZSIsCiAgICAgICAgImJhY2tjaGFubmVsLmxvZ291dC5yZXZva2Uub2ZmbGluZS50b2tlbnMiOiAiZmFsc2UiCiAgICAgIH0sCiAgICAgICJhdXRoZW50aWNhdGlvbkZsb3dCaW5kaW5nT3ZlcnJpZGVzIjoge30sCiAgICAgICJmdWxsU2NvcGVBbGxvd2VkIjogdHJ1ZSwKICAgICAgIm5vZGVSZVJlZ2lzdHJhdGlvblRpbWVvdXQiOiAtMSwKICAgICAgImRlZmF1bHRDbGllbnRTY29wZXMiOiBbCiAgICAgICAgIndlYi1vcmlnaW5zIiwKICAgICAgICAiYWNyIiwKICAgICAgICAicm9sZXMiLAogICAgICAgICJwcm9maWxlIiwKICAgICAgICAiYmFzaWMiLAogICAgICAgICJlbWFpbCIKICAgICAgXSwKICAgICAgIm9wdGlvbmFsQ2xpZW50U2NvcGVzIjogWwogICAgICAgICJhZGRyZXNzIiwKICAgICAgICAicGhvbmUiLAogICAgICAgICJvZmZsaW5lX2FjY2VzcyIsCiAgICAgICAgIm9yZ2FuaXphdGlvbiIsCiAgICAgICAgIm1pY3JvcHJvZmlsZS1qd3QiCiAgICAgIF0KICAgIH0KICBdLAogICJjbGllbnRTY29wZXMiOiBbCiAgICB7CiAgICAgICJpZCI6ICJiMDZhNGM3Yi05NTc5LTQzM2ItYjg0Yy02MmVlYThmMTViZjQiLAogICAgICAibmFtZSI6ICJiYXNpYyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJPcGVuSUQgQ29ubmVjdCBzY29wZSBmb3IgYWRkIGFsbCBiYXNpYyBjbGFpbXMgdG8gdGhlIHRva2VuIiwKICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgImF0dHJpYnV0ZXMiOiB7CiAgICAgICAgImluY2x1ZGUuaW4udG9rZW4uc2NvcGUiOiAiZmFsc2UiLAogICAgICAgICJkaXNwbGF5Lm9uLmNvbnNlbnQuc2NyZWVuIjogImZhbHNlIgogICAgICB9LAogICAgICAicHJvdG9jb2xNYXBwZXJzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJlMjdhNmNmZi0wMjk0LTQwMGItODRkMi0xYWIyNjk3Yjg2OTciLAogICAgICAgICAgIm5hbWUiOiAic3ViIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy1zdWItbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJpbnRyb3NwZWN0aW9uLnRva2VuLmNsYWltIjogInRydWUiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZTU2MGNjYzktNDM4YS00ZmU5LWFmMjEtMjcyZjY4YmZmYTU3IiwKICAgICAgICAgICJuYW1lIjogImF1dGhfdGltZSIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcnNlc3Npb25tb2RlbC1ub3RlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAidXNlci5zZXNzaW9uLm5vdGUiOiAiQVVUSF9USU1FIiwKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJhdXRoX3RpbWUiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAibG9uZyIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICI4ZTUxN2Q3Yy1jOGVkLTQyOTctOTIxOS0xMWM0YWIzNGI0MTEiLAogICAgICAibmFtZSI6ICJwcm9maWxlIiwKICAgICAgImRlc2NyaXB0aW9uIjogIk9wZW5JRCBDb25uZWN0IGJ1aWx0LWluIHNjb3BlOiBwcm9maWxlIiwKICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgImF0dHJpYnV0ZXMiOiB7CiAgICAgICAgImluY2x1ZGUuaW4udG9rZW4uc2NvcGUiOiAidHJ1ZSIsCiAgICAgICAgImNvbnNlbnQuc2NyZWVuLnRleHQiOiAiJHtwcm9maWxlU2NvcGVDb25zZW50VGV4dH0iLAogICAgICAgICJkaXNwbGF5Lm9uLmNvbnNlbnQuc2NyZWVuIjogInRydWUiCiAgICAgIH0sCiAgICAgICJwcm90b2NvbE1hcHBlcnMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogImEzOTk0ZDQxLWI4MjEtNDU5ZS1iNmVjLTczNDU0NmI5YmJmNiIsCiAgICAgICAgICAibmFtZSI6ICJuaWNrbmFtZSIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogIm5pY2tuYW1lIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJuaWNrbmFtZSIsCiAgICAgICAgICAgICJqc29uVHlwZS5sYWJlbCI6ICJTdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiOTMxYzBkNzMtNmU4Ni00NGI1LTg1MWQtMWU3NTQ0YzQzMWIxIiwKICAgICAgICAgICJuYW1lIjogImZhbWlseSBuYW1lIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAibGFzdE5hbWUiLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogImZhbWlseV9uYW1lIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICI2ZjE0M2E4Yy1iMjY3LTQyY2ItOTM4Yy1kMmEzNjA2NDIxY2EiLAogICAgICAgICAgIm5hbWUiOiAiYmlydGhkYXRlIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAiYmlydGhkYXRlIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJiaXJ0aGRhdGUiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiU3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImM4NWNlODljLWYxZTAtNGI4OC04NDllLWQ0YmM0OTI5MDZkMSIsCiAgICAgICAgICAibmFtZSI6ICJ3ZWJzaXRlIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAid2Vic2l0ZSIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAid2Vic2l0ZSIsCiAgICAgICAgICAgICJqc29uVHlwZS5sYWJlbCI6ICJTdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZGZlZDQ5YTktZWRmYy00NDg5LTgzZWQtNTk4Y2M3YTQ0MjAxIiwKICAgICAgICAgICJuYW1lIjogImxvY2FsZSIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogImxvY2FsZSIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAibG9jYWxlIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICIwODZjNjg2MC00ZjNhLTQ2ZDgtYjkyZi04ZWQwMTNlODBjNTYiLAogICAgICAgICAgIm5hbWUiOiAicGljdHVyZSIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogInBpY3R1cmUiLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogInBpY3R1cmUiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiU3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjM3ZmNlYjQ1LTIyZTktNDYxNi04OTFlLTg5MGY1YTg5OTBkZiIsCiAgICAgICAgICAibmFtZSI6ICJnaXZlbiBuYW1lIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAiZmlyc3ROYW1lIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJnaXZlbl9uYW1lIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICI5MTJiMGNlOS03M2I2LTQyNzItOTNiYy05Yjc1OTQ3Yjk3MmUiLAogICAgICAgICAgIm5hbWUiOiAiZ2VuZGVyIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAiZ2VuZGVyIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJnZW5kZXIiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiU3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImJmNzBjNWU5LTdmNWUtNGQ1My04YjUzLWYyZDdjZDZjODY4NiIsCiAgICAgICAgICAibmFtZSI6ICJmdWxsIG5hbWUiLAogICAgICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJvaWRjLWZ1bGwtbmFtZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiNmNmZTE3OTYtZjBkNS00MTE1LWJhNGQtNjMyM2FmZjM5NWE1IiwKICAgICAgICAgICJuYW1lIjogInVzZXJuYW1lIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAidXNlcm5hbWUiLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogInByZWZlcnJlZF91c2VybmFtZSIsCiAgICAgICAgICAgICJqc29uVHlwZS5sYWJlbCI6ICJTdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiNzE3MGE2YzUtZmJiZi00OWU5LWIyYjktNTkxMWU5OTVhNjM1IiwKICAgICAgICAgICJuYW1lIjogInpvbmVpbmZvIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAiem9uZWluZm8iLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogInpvbmVpbmZvIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICIzNmQzMmIwMS0xMjE5LTQwMDQtOGMyMi03ZWYxOTBjMjgwNTMiLAogICAgICAgICAgIm5hbWUiOiAidXBkYXRlZCBhdCIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogInVwZGF0ZWRBdCIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAidXBkYXRlZF9hdCIsCiAgICAgICAgICAgICJqc29uVHlwZS5sYWJlbCI6ICJsb25nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjY1MzI1YjdkLTZhMmMtNDY2Zi05ZDZkLWQ0ZjNjNjRlMmZlMyIsCiAgICAgICAgICAibmFtZSI6ICJtaWRkbGUgbmFtZSIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogIm1pZGRsZU5hbWUiLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogIm1pZGRsZV9uYW1lIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICI3MWExYTk0NS0xZWZkLTRkNGEtOTgyZS0zMzhjZjcwYjg5YjQiLAogICAgICAgICAgIm5hbWUiOiAicHJvZmlsZSIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogInByb2ZpbGUiLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogInByb2ZpbGUiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiU3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjQ4YjFjM2VlLWVjMzAtNDhmMi1hYTU2LTIyYTk3MDQxNmU1NSIsCiAgICAgICJuYW1lIjogIm9mZmxpbmVfYWNjZXNzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIk9wZW5JRCBDb25uZWN0IGJ1aWx0LWluIHNjb3BlOiBvZmZsaW5lX2FjY2VzcyIsCiAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICJhdHRyaWJ1dGVzIjogewogICAgICAgICJjb25zZW50LnNjcmVlbi50ZXh0IjogIiR7b2ZmbGluZUFjY2Vzc1Njb3BlQ29uc2VudFRleHR9IiwKICAgICAgICAiZGlzcGxheS5vbi5jb25zZW50LnNjcmVlbiI6ICJ0cnVlIgogICAgICB9CiAgICB9LAogICAgewogICAgICAiaWQiOiAiZjExYmFhNmMtOGNhZS00NjRkLWFhMzktZGRmMjZjMGQxYzViIiwKICAgICAgIm5hbWUiOiAiYWNyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIk9wZW5JRCBDb25uZWN0IHNjb3BlIGZvciBhZGQgYWNyIChhdXRoZW50aWNhdGlvbiBjb250ZXh0IGNsYXNzIHJlZmVyZW5jZSkgdG8gdGhlIHRva2VuIiwKICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgImF0dHJpYnV0ZXMiOiB7CiAgICAgICAgImluY2x1ZGUuaW4udG9rZW4uc2NvcGUiOiAiZmFsc2UiLAogICAgICAgICJkaXNwbGF5Lm9uLmNvbnNlbnQuc2NyZWVuIjogImZhbHNlIgogICAgICB9LAogICAgICAicHJvdG9jb2xNYXBwZXJzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICIwOWU4MmE3ZS0xYzJjLTQxZTUtYTdjMC1lZTU3YjkwMDVhMzMiLAogICAgICAgICAgIm5hbWUiOiAiYWNyIGxvYSBsZXZlbCIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtYWNyLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJpbnRyb3NwZWN0aW9uLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlcmluZm8udG9rZW4uY2xhaW0iOiAidHJ1ZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIyMjA1NWUyYy0yY2JlLTRiYTgtOWE4ZC03OTY0OWU0MmQ0M2MiLAogICAgICAibmFtZSI6ICJhZGRyZXNzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIk9wZW5JRCBDb25uZWN0IGJ1aWx0LWluIHNjb3BlOiBhZGRyZXNzIiwKICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgImF0dHJpYnV0ZXMiOiB7CiAgICAgICAgImluY2x1ZGUuaW4udG9rZW4uc2NvcGUiOiAidHJ1ZSIsCiAgICAgICAgImNvbnNlbnQuc2NyZWVuLnRleHQiOiAiJHthZGRyZXNzU2NvcGVDb25zZW50VGV4dH0iLAogICAgICAgICJkaXNwbGF5Lm9uLmNvbnNlbnQuc2NyZWVuIjogInRydWUiCiAgICAgIH0sCiAgICAgICJwcm90b2NvbE1hcHBlcnMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogImU5ODM1YzVmLWU0NmItNDQ2ZC05NWI0LTA1NmI0MTQxMTYxOCIsCiAgICAgICAgICAibmFtZSI6ICJhZGRyZXNzIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy1hZGRyZXNzLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUuZm9ybWF0dGVkIjogImZvcm1hdHRlZCIsCiAgICAgICAgICAgICJ1c2VyLmF0dHJpYnV0ZS5jb3VudHJ5IjogImNvdW50cnkiLAogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlLnBvc3RhbF9jb2RlIjogInBvc3RhbF9jb2RlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUuc3RyZWV0IjogInN0cmVldCIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlLnJlZ2lvbiI6ICJyZWdpb24iLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUubG9jYWxpdHkiOiAibG9jYWxpdHkiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiZGJhMjhjYTEtYTVhZi00ZmI0LTgzZDItOWJiYWRlZTJiY2FlIiwKICAgICAgIm5hbWUiOiAib3JnYW5pemF0aW9uIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkFkZGl0aW9uYWwgY2xhaW1zIGFib3V0IHRoZSBvcmdhbml6YXRpb24gYSBzdWJqZWN0IGJlbG9uZ3MgdG8iLAogICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAiaW5jbHVkZS5pbi50b2tlbi5zY29wZSI6ICJ0cnVlIiwKICAgICAgICAiY29uc2VudC5zY3JlZW4udGV4dCI6ICIke29yZ2FuaXphdGlvblNjb3BlQ29uc2VudFRleHR9IiwKICAgICAgICAiZGlzcGxheS5vbi5jb25zZW50LnNjcmVlbiI6ICJ0cnVlIgogICAgICB9LAogICAgICAicHJvdG9jb2xNYXBwZXJzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICI3NDNkMGIyZi05OGEwLTQxMDAtYWQ2Zi1kNzk3Y2Y3NTI5ZjAiLAogICAgICAgICAgIm5hbWUiOiAib3JnYW5pemF0aW9uIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy1vcmdhbml6YXRpb24tbWVtYmVyc2hpcC1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJtdWx0aXZhbHVlZCI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogIm9yZ2FuaXphdGlvbiIsCiAgICAgICAgICAgICJqc29uVHlwZS5sYWJlbCI6ICJTdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiZGJjN2UyNjItMDdjMS00YzVkLWEzODctMzY3ODQyMjMwNGZkIiwKICAgICAgIm5hbWUiOiAid2ViLW9yaWdpbnMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiT3BlbklEIENvbm5lY3Qgc2NvcGUgZm9yIGFkZCBhbGxvd2VkIHdlYiBvcmlnaW5zIHRvIHRoZSBhY2Nlc3MgdG9rZW4iLAogICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAiaW5jbHVkZS5pbi50b2tlbi5zY29wZSI6ICJmYWxzZSIsCiAgICAgICAgImNvbnNlbnQuc2NyZWVuLnRleHQiOiAiIiwKICAgICAgICAiZGlzcGxheS5vbi5jb25zZW50LnNjcmVlbiI6ICJmYWxzZSIKICAgICAgfSwKICAgICAgInByb3RvY29sTWFwcGVycyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiN2RhZWQ3NzAtNTNkYy00M2M4LWIwMzAtNWJmNDNhYWFjMDk1IiwKICAgICAgICAgICJuYW1lIjogImFsbG93ZWQgd2ViIG9yaWdpbnMiLAogICAgICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJvaWRjLWFsbG93ZWQtb3JpZ2lucy1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJkMTFlZTVhNC1iZjVkLTRiNmYtODMxYi01OGUwOTg1NTU2NmUiLAogICAgICAibmFtZSI6ICJlbWFpbCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJPcGVuSUQgQ29ubmVjdCBidWlsdC1pbiBzY29wZTogZW1haWwiLAogICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAiaW5jbHVkZS5pbi50b2tlbi5zY29wZSI6ICJ0cnVlIiwKICAgICAgICAiY29uc2VudC5zY3JlZW4udGV4dCI6ICIke2VtYWlsU2NvcGVDb25zZW50VGV4dH0iLAogICAgICAgICJkaXNwbGF5Lm9uLmNvbnNlbnQuc2NyZWVuIjogInRydWUiCiAgICAgIH0sCiAgICAgICJwcm90b2NvbE1hcHBlcnMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIjcwNjdiYWQxLTkyYTYtNDIxOS04YzUxLThmNzY0YWY2OTgwMyIsCiAgICAgICAgICAibmFtZSI6ICJlbWFpbCB2ZXJpZmllZCIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLXByb3BlcnR5LW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAiZW1haWxWZXJpZmllZCIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAiZW1haWxfdmVyaWZpZWQiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiYm9vbGVhbiIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJkOTgzYTRiYi0zY2Y2LTRjMDQtOWRhNS04OTRjYjA5YTg3MTQiLAogICAgICAgICAgIm5hbWUiOiAiZW1haWwiLAogICAgICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJvaWRjLXVzZXJtb2RlbC1hdHRyaWJ1dGUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJpbnRyb3NwZWN0aW9uLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlcmluZm8udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyLmF0dHJpYnV0ZSI6ICJlbWFpbCIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAiZW1haWwiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiU3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogImZhOWZhYTM3LWJhYzgtNDEyMi1hMGQ4LTU0MmI3YzA1NTc0YSIsCiAgICAgICJuYW1lIjogIm1pY3JvcHJvZmlsZS1qd3QiLAogICAgICAiZGVzY3JpcHRpb24iOiAiTWljcm9wcm9maWxlIC0gSldUIGJ1aWx0LWluIHNjb3BlIiwKICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgImF0dHJpYnV0ZXMiOiB7CiAgICAgICAgImluY2x1ZGUuaW4udG9rZW4uc2NvcGUiOiAidHJ1ZSIsCiAgICAgICAgImRpc3BsYXkub24uY29uc2VudC5zY3JlZW4iOiAiZmFsc2UiCiAgICAgIH0sCiAgICAgICJwcm90b2NvbE1hcHBlcnMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogImE5ODY5ZDg3LTM4NWItNDhjOC05YWM5LWNhZWI1Y2Q0NzY5ZiIsCiAgICAgICAgICAibmFtZSI6ICJ1cG4iLAogICAgICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJvaWRjLXVzZXJtb2RlbC1hdHRyaWJ1dGUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJpbnRyb3NwZWN0aW9uLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlcmluZm8udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyLmF0dHJpYnV0ZSI6ICJ1c2VybmFtZSIsCiAgICAgICAgICAgICJpZC50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAidXBuIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICI5ZGRjZTM1NC0zOTlhLTQxMmYtOTNiZC1lZDAwNTFhMTQ0NDYiLAogICAgICAgICAgIm5hbWUiOiAiZ3JvdXBzIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2VybW9kZWwtcmVhbG0tcm9sZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJtdWx0aXZhbHVlZCI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlci5hdHRyaWJ1dGUiOiAiZm9vIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJncm91cHMiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiU3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogImQxZmZhZDc4LWY2YWQtNDhkOS04ZWQ0LThkYjdiNmNmMDhkZiIsCiAgICAgICJuYW1lIjogInNlcnZpY2VfYWNjb3VudCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTcGVjaWZpYyBzY29wZSBmb3IgYSBjbGllbnQgZW5hYmxlZCBmb3Igc2VydmljZSBhY2NvdW50cyIsCiAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICJhdHRyaWJ1dGVzIjogewogICAgICAgICJpbmNsdWRlLmluLnRva2VuLnNjb3BlIjogImZhbHNlIiwKICAgICAgICAiZGlzcGxheS5vbi5jb25zZW50LnNjcmVlbiI6ICJmYWxzZSIKICAgICAgfSwKICAgICAgInByb3RvY29sTWFwcGVycyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiMDkyNmFiYTgtZTQ2Ni00ZGE2LTg4MTctMmQzYzlmY2ExYzYxIiwKICAgICAgICAgICJuYW1lIjogIkNsaWVudCBIb3N0IiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2Vyc2Vzc2lvbm1vZGVsLW5vdGUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJ1c2VyLnNlc3Npb24ubm90ZSI6ICJjbGllbnRIb3N0IiwKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJjbGllbnRIb3N0IiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJlYTM5NjljYS1mYTJjLTRmYzctYWY1Yy1kZjlmMzdjODBiNzEiLAogICAgICAgICAgIm5hbWUiOiAiQ2xpZW50IElEIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2Vyc2Vzc2lvbm1vZGVsLW5vdGUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJ1c2VyLnNlc3Npb24ubm90ZSI6ICJjbGllbnRfaWQiLAogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXJpbmZvLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiaWQudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJhY2Nlc3MudG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJjbGFpbS5uYW1lIjogImNsaWVudF9pZCIsCiAgICAgICAgICAgICJqc29uVHlwZS5sYWJlbCI6ICJTdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiZjQyMDE5NjktNGMwYy00Y2VhLWJmNTYtYjE5ODQ3YTlhMWNjIiwKICAgICAgICAgICJuYW1lIjogIkNsaWVudCBJUCBBZGRyZXNzIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy11c2Vyc2Vzc2lvbm1vZGVsLW5vdGUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJ1c2VyLnNlc3Npb24ubm90ZSI6ICJjbGllbnRBZGRyZXNzIiwKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJjbGllbnRBZGRyZXNzIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIxMjc2YzU5ZS1iNzJkLTQ4Y2YtOWE3MS1mYzRjYjU0NjNhNWMiLAogICAgICAibmFtZSI6ICJyb2xlcyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJPcGVuSUQgQ29ubmVjdCBzY29wZSBmb3IgYWRkIHVzZXIgcm9sZXMgdG8gdGhlIGFjY2VzcyB0b2tlbiIsCiAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICJhdHRyaWJ1dGVzIjogewogICAgICAgICJpbmNsdWRlLmluLnRva2VuLnNjb3BlIjogImZhbHNlIiwKICAgICAgICAiY29uc2VudC5zY3JlZW4udGV4dCI6ICIke3JvbGVzU2NvcGVDb25zZW50VGV4dH0iLAogICAgICAgICJkaXNwbGF5Lm9uLmNvbnNlbnQuc2NyZWVuIjogInRydWUiCiAgICAgIH0sCiAgICAgICJwcm90b2NvbE1hcHBlcnMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogImIxZTUyOWQ2LTNkZDEtNDYwNy1iZjk2LTkxYjk1YWNhMjFjMSIsCiAgICAgICAgICAibmFtZSI6ICJhdWRpZW5jZSByZXNvbHZlIiwKICAgICAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAib2lkYy1hdWRpZW5jZS1yZXNvbHZlLW1hcHBlciIsCiAgICAgICAgICAiY29uc2VudFJlcXVpcmVkIjogZmFsc2UsCiAgICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogIjRlM2Y4MmYxLWRiYmMtNDJjMi04MDRlLTI3N2VjMDkyMDQxZSIsCiAgICAgICAgICAibmFtZSI6ICJjbGllbnQgcm9sZXMiLAogICAgICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJvaWRjLXVzZXJtb2RlbC1jbGllbnQtcm9sZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogImZvbyIsCiAgICAgICAgICAgICJpbnRyb3NwZWN0aW9uLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJyZXNvdXJjZV9hY2Nlc3MuJHtjbGllbnRfaWR9LnJvbGVzIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIsCiAgICAgICAgICAgICJtdWx0aXZhbHVlZCI6ICJ0cnVlIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImIxZTQyOWEwLWIzYWMtNGMwNy04MmJlLWM0N2RmYmViYzFmYiIsCiAgICAgICAgICAibmFtZSI6ICJyZWFsbSByb2xlcyIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLXJlYWxtLXJvbGUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJ1c2VyLmF0dHJpYnV0ZSI6ICJmb28iLAogICAgICAgICAgICAiaW50cm9zcGVjdGlvbi50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImFjY2Vzcy50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgImNsYWltLm5hbWUiOiAicmVhbG1fYWNjZXNzLnJvbGVzIiwKICAgICAgICAgICAgImpzb25UeXBlLmxhYmVsIjogIlN0cmluZyIsCiAgICAgICAgICAgICJtdWx0aXZhbHVlZCI6ICJ0cnVlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogImUwOTQ5NDIxLTI0YTAtNDUyYy1iYTY4LTI3ODkxNzUzNWZkMyIsCiAgICAgICJuYW1lIjogInNhbWxfb3JnYW5pemF0aW9uIiwKICAgICAgImRlc2NyaXB0aW9uIjogIk9yZ2FuaXphdGlvbiBNZW1iZXJzaGlwIiwKICAgICAgInByb3RvY29sIjogInNhbWwiLAogICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAiZGlzcGxheS5vbi5jb25zZW50LnNjcmVlbiI6ICJmYWxzZSIKICAgICAgfSwKICAgICAgInByb3RvY29sTWFwcGVycyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiMTZmOTRjZDMtM2Y0Ni00MDg1LTlkYjctYmIxYjgzZDEwNTViIiwKICAgICAgICAgICJuYW1lIjogIm9yZ2FuaXphdGlvbiIsCiAgICAgICAgICAicHJvdG9jb2wiOiAic2FtbCIsCiAgICAgICAgICAicHJvdG9jb2xNYXBwZXIiOiAic2FtbC1vcmdhbml6YXRpb24tbWVtYmVyc2hpcC1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHt9CiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiMTIwYWFiMWQtYzFjYy00YjMyLThiOTMtMGRhMjBlYzFlNzIxIiwKICAgICAgIm5hbWUiOiAicm9sZV9saXN0IiwKICAgICAgImRlc2NyaXB0aW9uIjogIlNBTUwgcm9sZSBsaXN0IiwKICAgICAgInByb3RvY29sIjogInNhbWwiLAogICAgICAiYXR0cmlidXRlcyI6IHsKICAgICAgICAiY29uc2VudC5zY3JlZW4udGV4dCI6ICIke3NhbWxSb2xlTGlzdFNjb3BlQ29uc2VudFRleHR9IiwKICAgICAgICAiZGlzcGxheS5vbi5jb25zZW50LnNjcmVlbiI6ICJ0cnVlIgogICAgICB9LAogICAgICAicHJvdG9jb2xNYXBwZXJzIjogWwogICAgICAgIHsKICAgICAgICAgICJpZCI6ICJhNDkzYzU0My1kM2NhLTRhZjUtYTFhMS1lYTk0MDI1OGI4YjkiLAogICAgICAgICAgIm5hbWUiOiAicm9sZSBsaXN0IiwKICAgICAgICAgICJwcm90b2NvbCI6ICJzYW1sIiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJzYW1sLXJvbGUtbGlzdC1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgInNpbmdsZSI6ICJmYWxzZSIsCiAgICAgICAgICAgICJhdHRyaWJ1dGUubmFtZWZvcm1hdCI6ICJCYXNpYyIsCiAgICAgICAgICAgICJhdHRyaWJ1dGUubmFtZSI6ICJSb2xlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjhhOWEwZDUzLTA5ODUtNGQxZC05NjgxLWUzYmVkMTdhZWU1OCIsCiAgICAgICJuYW1lIjogInBob25lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIk9wZW5JRCBDb25uZWN0IGJ1aWx0LWluIHNjb3BlOiBwaG9uZSIsCiAgICAgICJwcm90b2NvbCI6ICJvcGVuaWQtY29ubmVjdCIsCiAgICAgICJhdHRyaWJ1dGVzIjogewogICAgICAgICJpbmNsdWRlLmluLnRva2VuLnNjb3BlIjogInRydWUiLAogICAgICAgICJjb25zZW50LnNjcmVlbi50ZXh0IjogIiR7cGhvbmVTY29wZUNvbnNlbnRUZXh0fSIsCiAgICAgICAgImRpc3BsYXkub24uY29uc2VudC5zY3JlZW4iOiAidHJ1ZSIKICAgICAgfSwKICAgICAgInByb3RvY29sTWFwcGVycyI6IFsKICAgICAgICB7CiAgICAgICAgICAiaWQiOiAiNmFiZTg3NjQtNzM4Mi00N2RjLTg2NWUtMTY3ZDg4MTQ2YjVjIiwKICAgICAgICAgICJuYW1lIjogInBob25lIG51bWJlciIsCiAgICAgICAgICAicHJvdG9jb2wiOiAib3BlbmlkLWNvbm5lY3QiLAogICAgICAgICAgInByb3RvY29sTWFwcGVyIjogIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgImNvbnNlbnRSZXF1aXJlZCI6IGZhbHNlLAogICAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICAgImludHJvc3BlY3Rpb24udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyaW5mby50b2tlbi5jbGFpbSI6ICJ0cnVlIiwKICAgICAgICAgICAgInVzZXIuYXR0cmlidXRlIjogInBob25lTnVtYmVyIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJwaG9uZV9udW1iZXIiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiU3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImlkIjogImY2MjI4MDQwLWIwNGItNGJlMi05YjM2LWRiYWQ1YzhhZmU4YSIsCiAgICAgICAgICAibmFtZSI6ICJwaG9uZSBudW1iZXIgdmVyaWZpZWQiLAogICAgICAgICAgInByb3RvY29sIjogIm9wZW5pZC1jb25uZWN0IiwKICAgICAgICAgICJwcm90b2NvbE1hcHBlciI6ICJvaWRjLXVzZXJtb2RlbC1hdHRyaWJ1dGUtbWFwcGVyIiwKICAgICAgICAgICJjb25zZW50UmVxdWlyZWQiOiBmYWxzZSwKICAgICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAgICJpbnRyb3NwZWN0aW9uLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAidXNlcmluZm8udG9rZW4uY2xhaW0iOiAidHJ1ZSIsCiAgICAgICAgICAgICJ1c2VyLmF0dHJpYnV0ZSI6ICJwaG9uZU51bWJlclZlcmlmaWVkIiwKICAgICAgICAgICAgImlkLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiYWNjZXNzLnRva2VuLmNsYWltIjogInRydWUiLAogICAgICAgICAgICAiY2xhaW0ubmFtZSI6ICJwaG9uZV9udW1iZXJfdmVyaWZpZWQiLAogICAgICAgICAgICAianNvblR5cGUubGFiZWwiOiAiYm9vbGVhbiIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0KICBdLAogICJkZWZhdWx0RGVmYXVsdENsaWVudFNjb3BlcyI6IFsKICAgICJyb2xlX2xpc3QiLAogICAgInJvbGVzIiwKICAgICJwcm9maWxlIiwKICAgICJiYXNpYyIsCiAgICAiZW1haWwiLAogICAgIndlYi1vcmlnaW5zIiwKICAgICJzYW1sX29yZ2FuaXphdGlvbiIsCiAgICAiYWNyIgogIF0sCiAgImRlZmF1bHRPcHRpb25hbENsaWVudFNjb3BlcyI6IFsKICAgICJhZGRyZXNzIiwKICAgICJvZmZsaW5lX2FjY2VzcyIsCiAgICAicGhvbmUiLAogICAgIm9yZ2FuaXphdGlvbiIsCiAgICAibWljcm9wcm9maWxlLWp3dCIKICBdLAogICJicm93c2VyU2VjdXJpdHlIZWFkZXJzIjogewogICAgImNvbnRlbnRTZWN1cml0eVBvbGljeVJlcG9ydE9ubHkiOiAiIiwKICAgICJ4Q29udGVudFR5cGVPcHRpb25zIjogIm5vc25pZmYiLAogICAgInJlZmVycmVyUG9saWN5IjogIm5vLXJlZmVycmVyIiwKICAgICJ4Um9ib3RzVGFnIjogIm5vbmUiLAogICAgInhGcmFtZU9wdGlvbnMiOiAiU0FNRU9SSUdJTiIsCiAgICAiY29udGVudFNlY3VyaXR5UG9saWN5IjogImZyYW1lLXNyYyAnc2VsZic7IGZyYW1lLWFuY2VzdG9ycyAnc2VsZic7IG9iamVjdC1zcmMgJ25vbmUnOyIsCiAgICAieFhTU1Byb3RlY3Rpb24iOiAiMTsgbW9kZT1ibG9jayIsCiAgICAic3RyaWN0VHJhbnNwb3J0U2VjdXJpdHkiOiAibWF4LWFnZT0zMTUzNjAwMDsgaW5jbHVkZVN1YkRvbWFpbnMiCiAgfSwKICAic210cFNlcnZlciI6IHt9LAogICJsb2dpblRoZW1lIjogImtleWNsb2FrLnYyIiwKICAiYWNjb3VudFRoZW1lIjogImtleWNsb2FrLnYzIiwKICAiYWRtaW5UaGVtZSI6ICJrZXljbG9hay52MiIsCiAgImVtYWlsVGhlbWUiOiAia2V5Y2xvYWsiLAogICJldmVudHNFbmFibGVkIjogZmFsc2UsCiAgImV2ZW50c0xpc3RlbmVycyI6IFsKICAgICJqYm9zcy1sb2dnaW5nIgogIF0sCiAgImVuYWJsZWRFdmVudFR5cGVzIjogW10sCiAgImFkbWluRXZlbnRzRW5hYmxlZCI6IGZhbHNlLAogICJhZG1pbkV2ZW50c0RldGFpbHNFbmFibGVkIjogZmFsc2UsCiAgImlkZW50aXR5UHJvdmlkZXJzIjogW10sCiAgImlkZW50aXR5UHJvdmlkZXJNYXBwZXJzIjogW10sCiAgImNvbXBvbmVudHMiOiB7CiAgICAib3JnLmtleWNsb2FrLnNlcnZpY2VzLmNsaWVudHJlZ2lzdHJhdGlvbi5wb2xpY3kuQ2xpZW50UmVnaXN0cmF0aW9uUG9saWN5IjogWwogICAgICB7CiAgICAgICAgImlkIjogIjBhYjg4MzRlLWU2YjYtNDc5Ny04MzBkLTUwODlkMDZhYTk1NCIsCiAgICAgICAgIm5hbWUiOiAiQWxsb3dlZCBQcm90b2NvbCBNYXBwZXIgVHlwZXMiLAogICAgICAgICJwcm92aWRlcklkIjogImFsbG93ZWQtcHJvdG9jb2wtbWFwcGVycyIsCiAgICAgICAgInN1YlR5cGUiOiAiYW5vbnltb3VzIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAiYWxsb3dlZC1wcm90b2NvbC1tYXBwZXItdHlwZXMiOiBbCiAgICAgICAgICAgICJvaWRjLXNoYTI1Ni1wYWlyd2lzZS1zdWItbWFwcGVyIiwKICAgICAgICAgICAgInNhbWwtcm9sZS1saXN0LW1hcHBlciIsCiAgICAgICAgICAgICJvaWRjLWFkZHJlc3MtbWFwcGVyIiwKICAgICAgICAgICAgIm9pZGMtZnVsbC1uYW1lLW1hcHBlciIsCiAgICAgICAgICAgICJzYW1sLXVzZXItcHJvcGVydHktbWFwcGVyIiwKICAgICAgICAgICAgInNhbWwtdXNlci1hdHRyaWJ1dGUtbWFwcGVyIiwKICAgICAgICAgICAgIm9pZGMtdXNlcm1vZGVsLWF0dHJpYnV0ZS1tYXBwZXIiLAogICAgICAgICAgICAib2lkYy11c2VybW9kZWwtcHJvcGVydHktbWFwcGVyIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJpZCI6ICJiMDg2NDVjMC1kZTM5LTQ1NGItOWI0OC0yN2ZkNzUxYTM0OTMiLAogICAgICAgICJuYW1lIjogIk1heCBDbGllbnRzIExpbWl0IiwKICAgICAgICAicHJvdmlkZXJJZCI6ICJtYXgtY2xpZW50cyIsCiAgICAgICAgInN1YlR5cGUiOiAiYW5vbnltb3VzIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAibWF4LWNsaWVudHMiOiBbCiAgICAgICAgICAgICIyMDAiCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICB7CiAgICAgICAgImlkIjogIjdmNDFlNjMzLTljYWQtNDMwOC04MGQ5LTQzN2MyNmVjYzU3MSIsCiAgICAgICAgIm5hbWUiOiAiVHJ1c3RlZCBIb3N0cyIsCiAgICAgICAgInByb3ZpZGVySWQiOiAidHJ1c3RlZC1ob3N0cyIsCiAgICAgICAgInN1YlR5cGUiOiAiYW5vbnltb3VzIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAiaG9zdC1zZW5kaW5nLXJlZ2lzdHJhdGlvbi1yZXF1ZXN0LW11c3QtbWF0Y2giOiBbCiAgICAgICAgICAgICJ0cnVlIgogICAgICAgICAgXSwKICAgICAgICAgICJjbGllbnQtdXJpcy1tdXN0LW1hdGNoIjogWwogICAgICAgICAgICAidHJ1ZSIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAiaWQiOiAiMzJhOWQ4YmEtMWU3Yy00MjA3LWI4NTgtMTY1MzFhYmEyOTg4IiwKICAgICAgICAibmFtZSI6ICJBbGxvd2VkIENsaWVudCBTY29wZXMiLAogICAgICAgICJwcm92aWRlcklkIjogImFsbG93ZWQtY2xpZW50LXRlbXBsYXRlcyIsCiAgICAgICAgInN1YlR5cGUiOiAiYXV0aGVudGljYXRlZCIsCiAgICAgICAgInN1YkNvbXBvbmVudHMiOiB7fSwKICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgImFsbG93LWRlZmF1bHQtc2NvcGVzIjogWwogICAgICAgICAgICAidHJ1ZSIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAiaWQiOiAiNmE0ZjAxZDEtZTY5OC00ZDNhLWIzM2ItZTcxYzcwN2VhNGY5IiwKICAgICAgICAibmFtZSI6ICJGdWxsIFNjb3BlIERpc2FibGVkIiwKICAgICAgICAicHJvdmlkZXJJZCI6ICJzY29wZSIsCiAgICAgICAgInN1YlR5cGUiOiAiYW5vbnltb3VzIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7fQogICAgICB9LAogICAgICB7CiAgICAgICAgImlkIjogImZhZTE1MzM1LWUyMmMtNGUxZC05NDRmLTk5YWY1MDUxNDNmOCIsCiAgICAgICAgIm5hbWUiOiAiQ29uc2VudCBSZXF1aXJlZCIsCiAgICAgICAgInByb3ZpZGVySWQiOiAiY29uc2VudC1yZXF1aXJlZCIsCiAgICAgICAgInN1YlR5cGUiOiAiYW5vbnltb3VzIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7fQogICAgICB9LAogICAgICB7CiAgICAgICAgImlkIjogIjA2YTYwODhmLTE2MWMtNDg1MC1iM2Q1LTBlOTljNjRkYWJmNSIsCiAgICAgICAgIm5hbWUiOiAiQWxsb3dlZCBDbGllbnQgU2NvcGVzIiwKICAgICAgICAicHJvdmlkZXJJZCI6ICJhbGxvd2VkLWNsaWVudC10ZW1wbGF0ZXMiLAogICAgICAgICJzdWJUeXBlIjogImFub255bW91cyIsCiAgICAgICAgInN1YkNvbXBvbmVudHMiOiB7fSwKICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgImFsbG93LWRlZmF1bHQtc2NvcGVzIjogWwogICAgICAgICAgICAidHJ1ZSIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAiaWQiOiAiMTEwNGYzYTEtZTBhNi00YmVjLTk2NGYtMjE4ZWU2NDFkMTAzIiwKICAgICAgICAibmFtZSI6ICJBbGxvd2VkIFByb3RvY29sIE1hcHBlciBUeXBlcyIsCiAgICAgICAgInByb3ZpZGVySWQiOiAiYWxsb3dlZC1wcm90b2NvbC1tYXBwZXJzIiwKICAgICAgICAic3ViVHlwZSI6ICJhdXRoZW50aWNhdGVkIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAiYWxsb3dlZC1wcm90b2NvbC1tYXBwZXItdHlwZXMiOiBbCiAgICAgICAgICAgICJvaWRjLWZ1bGwtbmFtZS1tYXBwZXIiLAogICAgICAgICAgICAib2lkYy11c2VybW9kZWwtcHJvcGVydHktbWFwcGVyIiwKICAgICAgICAgICAgIm9pZGMtYWRkcmVzcy1tYXBwZXIiLAogICAgICAgICAgICAic2FtbC1yb2xlLWxpc3QtbWFwcGVyIiwKICAgICAgICAgICAgInNhbWwtdXNlci1hdHRyaWJ1dGUtbWFwcGVyIiwKICAgICAgICAgICAgIm9pZGMtc2hhMjU2LXBhaXJ3aXNlLXN1Yi1tYXBwZXIiLAogICAgICAgICAgICAib2lkYy11c2VybW9kZWwtYXR0cmlidXRlLW1hcHBlciIsCiAgICAgICAgICAgICJzYW1sLXVzZXItcHJvcGVydHktbWFwcGVyIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfQogICAgXSwKICAgICJvcmcua2V5Y2xvYWsua2V5cy5LZXlQcm92aWRlciI6IFsKICAgICAgewogICAgICAgICJpZCI6ICIxZTc3MTA2Yy0xMzI2LTQ3Y2QtYmM3MS1jNDY2MGM4MTljNWYiLAogICAgICAgICJuYW1lIjogImhtYWMtZ2VuZXJhdGVkLWhzNTEyIiwKICAgICAgICAicHJvdmlkZXJJZCI6ICJobWFjLWdlbmVyYXRlZCIsCiAgICAgICAgInN1YkNvbXBvbmVudHMiOiB7fSwKICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgInByaW9yaXR5IjogWwogICAgICAgICAgICAiMTAwIgogICAgICAgICAgXSwKICAgICAgICAgICJhbGdvcml0aG0iOiBbCiAgICAgICAgICAgICJIUzUxMiIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHsKICAgICAgICAiaWQiOiAiODczNmFkMzctOTVlOC00MWJmLWEyMDQtMzYwNDA2MmYzNmI5IiwKICAgICAgICAibmFtZSI6ICJyc2EtZ2VuZXJhdGVkIiwKICAgICAgICAicHJvdmlkZXJJZCI6ICJyc2EtZ2VuZXJhdGVkIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAicHJpb3JpdHkiOiBbCiAgICAgICAgICAgICIxMDAiCiAgICAgICAgICBdCiAgICAgICAgfQogICAgICB9LAogICAgICB7CiAgICAgICAgImlkIjogIjhjMWFmZTdjLTdjNTItNGFhZi05MjU2LWVjZTEwZTZkNjg3MCIsCiAgICAgICAgIm5hbWUiOiAicnNhLWVuYy1nZW5lcmF0ZWQiLAogICAgICAgICJwcm92aWRlcklkIjogInJzYS1lbmMtZ2VuZXJhdGVkIiwKICAgICAgICAic3ViQ29tcG9uZW50cyI6IHt9LAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAicHJpb3JpdHkiOiBbCiAgICAgICAgICAgICIxMDAiCiAgICAgICAgICBdLAogICAgICAgICAgImFsZ29yaXRobSI6IFsKICAgICAgICAgICAgIlJTQS1PQUVQIgogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJpZCI6ICIzZDZlZTRlOC0xMDI1LTQ1ZjgtODk2Ny04ZTk5NzIwOGM4MjAiLAogICAgICAgICJuYW1lIjogImFlcy1nZW5lcmF0ZWQiLAogICAgICAgICJwcm92aWRlcklkIjogImFlcy1nZW5lcmF0ZWQiLAogICAgICAgICJzdWJDb21wb25lbnRzIjoge30sCiAgICAgICAgImNvbmZpZyI6IHsKICAgICAgICAgICJwcmlvcml0eSI6IFsKICAgICAgICAgICAgIjEwMCIKICAgICAgICAgIF0KICAgICAgICB9CiAgICAgIH0KICAgIF0KICB9LAogICJpbnRlcm5hdGlvbmFsaXphdGlvbkVuYWJsZWQiOiBmYWxzZSwKICAic3VwcG9ydGVkTG9jYWxlcyI6IFtdLAogICJhdXRoZW50aWNhdGlvbkZsb3dzIjogWwogICAgewogICAgICAiaWQiOiAiM2JhNGRiOGQtNjk5Ny00MmE3LThjZTEtNWJmNzJlMWQ4M2NjIiwKICAgICAgImFsaWFzIjogIkFjY291bnQgdmVyaWZpY2F0aW9uIG9wdGlvbnMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiTWV0aG9kIHdpdGggd2hpY2ggdG8gdmVyaXR5IHRoZSBleGlzdGluZyBhY2NvdW50IiwKICAgICAgInByb3ZpZGVySWQiOiAiYmFzaWMtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IGZhbHNlLAogICAgICAiYnVpbHRJbiI6IHRydWUsCiAgICAgICJhdXRoZW50aWNhdGlvbkV4ZWN1dGlvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiaWRwLWVtYWlsLXZlcmlmaWNhdGlvbiIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJBTFRFUk5BVElWRSIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIkFMVEVSTkFUSVZFIiwKICAgICAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgImZsb3dBbGlhcyI6ICJWZXJpZnkgRXhpc3RpbmcgQWNjb3VudCBieSBSZS1hdXRoZW50aWNhdGlvbiIsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiYmQ1NDRjMjEtY2E4MC00YWNjLWI0OTUtYTM4ZWYxNWJmMTg3IiwKICAgICAgImFsaWFzIjogIkJyb3dzZXIgLSBDb25kaXRpb25hbCBPVFAiLAogICAgICAiZGVzY3JpcHRpb24iOiAiRmxvdyB0byBkZXRlcm1pbmUgaWYgdGhlIE9UUCBpcyByZXF1aXJlZCBmb3IgdGhlIGF1dGhlbnRpY2F0aW9uIiwKICAgICAgInByb3ZpZGVySWQiOiAiYmFzaWMtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IGZhbHNlLAogICAgICAiYnVpbHRJbiI6IHRydWUsCiAgICAgICJhdXRoZW50aWNhdGlvbkV4ZWN1dGlvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiY29uZGl0aW9uYWwtdXNlci1jb25maWd1cmVkIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDEwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImF1dGgtb3RwLWZvcm0iLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjdjYTdjYmNkLTZjNDUtNGY2Yy04MWM0LWQ5MjVlZGIyZDhkZCIsCiAgICAgICJhbGlhcyI6ICJCcm93c2VyIC0gQ29uZGl0aW9uYWwgT3JnYW5pemF0aW9uIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkZsb3cgdG8gZGV0ZXJtaW5lIGlmIHRoZSBvcmdhbml6YXRpb24gaWRlbnRpdHktZmlyc3QgbG9naW4gaXMgdG8gYmUgdXNlZCIsCiAgICAgICJwcm92aWRlcklkIjogImJhc2ljLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiBmYWxzZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImNvbmRpdGlvbmFsLXVzZXItY29uZmlndXJlZCIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJvcmdhbml6YXRpb24iLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiQUxURVJOQVRJVkUiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjZhYWIxNjk0LWE1OTMtNDkxNS04YTYwLWFhMmEyMmUwN2RkMCIsCiAgICAgICJhbGlhcyI6ICJEaXJlY3QgR3JhbnQgLSBDb25kaXRpb25hbCBPVFAiLAogICAgICAiZGVzY3JpcHRpb24iOiAiRmxvdyB0byBkZXRlcm1pbmUgaWYgdGhlIE9UUCBpcyByZXF1aXJlZCBmb3IgdGhlIGF1dGhlbnRpY2F0aW9uIiwKICAgICAgInByb3ZpZGVySWQiOiAiYmFzaWMtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IGZhbHNlLAogICAgICAiYnVpbHRJbiI6IHRydWUsCiAgICAgICJhdXRoZW50aWNhdGlvbkV4ZWN1dGlvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiY29uZGl0aW9uYWwtdXNlci1jb25maWd1cmVkIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDEwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImRpcmVjdC1ncmFudC12YWxpZGF0ZS1vdHAiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjYxMTExOTUwLWVkZTktNGIzNS1hMGYyLWMwZTQ1NzM3NTk0ZiIsCiAgICAgICJhbGlhcyI6ICJGaXJzdCBCcm9rZXIgTG9naW4gLSBDb25kaXRpb25hbCBPcmdhbml6YXRpb24iLAogICAgICAiZGVzY3JpcHRpb24iOiAiRmxvdyB0byBkZXRlcm1pbmUgaWYgdGhlIGF1dGhlbnRpY2F0b3IgdGhhdCBhZGRzIG9yZ2FuaXphdGlvbiBtZW1iZXJzIGlzIHRvIGJlIHVzZWQiLAogICAgICAicHJvdmlkZXJJZCI6ICJiYXNpYy1mbG93IiwKICAgICAgInRvcExldmVsIjogZmFsc2UsCiAgICAgICJidWlsdEluIjogdHJ1ZSwKICAgICAgImF1dGhlbnRpY2F0aW9uRXhlY3V0aW9ucyI6IFsKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJjb25kaXRpb25hbC11c2VyLWNvbmZpZ3VyZWQiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMTAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiaWRwLWFkZC1vcmdhbml6YXRpb24tbWVtYmVyIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIyMzE1ZTZhMS1jYjEwLTQzMzgtOTZhZS0xYWYyZmRjNDE3MjYiLAogICAgICAiYWxpYXMiOiAiRmlyc3QgYnJva2VyIGxvZ2luIC0gQ29uZGl0aW9uYWwgT1RQIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkZsb3cgdG8gZGV0ZXJtaW5lIGlmIHRoZSBPVFAgaXMgcmVxdWlyZWQgZm9yIHRoZSBhdXRoZW50aWNhdGlvbiIsCiAgICAgICJwcm92aWRlcklkIjogImJhc2ljLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiBmYWxzZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImNvbmRpdGlvbmFsLXVzZXItY29uZmlndXJlZCIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJhdXRoLW90cC1mb3JtIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICJjMDgzZmZhZi00NDViLTRjNjMtODBhZC1lYzYwMTk1Njk3ZTYiLAogICAgICAiYWxpYXMiOiAiSGFuZGxlIEV4aXN0aW5nIEFjY291bnQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiSGFuZGxlIHdoYXQgdG8gZG8gaWYgdGhlcmUgaXMgZXhpc3RpbmcgYWNjb3VudCB3aXRoIHNhbWUgZW1haWwvdXNlcm5hbWUgbGlrZSBhdXRoZW50aWNhdGVkIGlkZW50aXR5IHByb3ZpZGVyIiwKICAgICAgInByb3ZpZGVySWQiOiAiYmFzaWMtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IGZhbHNlLAogICAgICAiYnVpbHRJbiI6IHRydWUsCiAgICAgICJhdXRoZW50aWNhdGlvbkV4ZWN1dGlvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiaWRwLWNvbmZpcm0tbGluayIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgImZsb3dBbGlhcyI6ICJBY2NvdW50IHZlcmlmaWNhdGlvbiBvcHRpb25zIiwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICI2OGQ1ZjYxOS05ZTQ2LTRjZGQtYTk2NS1jMWNmMTI0NDNkYTUiLAogICAgICAiYWxpYXMiOiAiT3JnYW5pemF0aW9uIiwKICAgICAgInByb3ZpZGVySWQiOiAiYmFzaWMtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IGZhbHNlLAogICAgICAiYnVpbHRJbiI6IHRydWUsCiAgICAgICJhdXRoZW50aWNhdGlvbkV4ZWN1dGlvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJDT05ESVRJT05BTCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJmbG93QWxpYXMiOiAiQnJvd3NlciAtIENvbmRpdGlvbmFsIE9yZ2FuaXphdGlvbiIsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiNTc0MzA0ZTEtNTMxZi00YjAxLTljODMtZWM0ZjcwYzYyOGVjIiwKICAgICAgImFsaWFzIjogIlJlc2V0IC0gQ29uZGl0aW9uYWwgT1RQIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkZsb3cgdG8gZGV0ZXJtaW5lIGlmIHRoZSBPVFAgc2hvdWxkIGJlIHJlc2V0IG9yIG5vdC4gU2V0IHRvIFJFUVVJUkVEIHRvIGZvcmNlLiIsCiAgICAgICJwcm92aWRlcklkIjogImJhc2ljLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiBmYWxzZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImNvbmRpdGlvbmFsLXVzZXItY29uZmlndXJlZCIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJyZXNldC1vdHAiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogImQzODE0YjQwLWIwYTEtNGZiOS05ZDI0LTdkNmNhNzc4NzM2MSIsCiAgICAgICJhbGlhcyI6ICJVc2VyIGNyZWF0aW9uIG9yIGxpbmtpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiRmxvdyBmb3IgdGhlIGV4aXN0aW5nL25vbi1leGlzdGluZyB1c2VyIGFsdGVybmF0aXZlcyIsCiAgICAgICJwcm92aWRlcklkIjogImJhc2ljLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiBmYWxzZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yQ29uZmlnIjogImNyZWF0ZSB1bmlxdWUgdXNlciBjb25maWciLAogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiaWRwLWNyZWF0ZS11c2VyLWlmLXVuaXF1ZSIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJBTFRFUk5BVElWRSIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIkFMVEVSTkFUSVZFIiwKICAgICAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgImZsb3dBbGlhcyI6ICJIYW5kbGUgRXhpc3RpbmcgQWNjb3VudCIsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiMjJhODQxZTMtMDM2OC00YWY2LTg2ODAtYmIyNmExMDAxYTlkIiwKICAgICAgImFsaWFzIjogIlZlcmlmeSBFeGlzdGluZyBBY2NvdW50IGJ5IFJlLWF1dGhlbnRpY2F0aW9uIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlJlYXV0aGVudGljYXRpb24gb2YgZXhpc3RpbmcgYWNjb3VudCIsCiAgICAgICJwcm92aWRlcklkIjogImJhc2ljLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiBmYWxzZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImlkcC11c2VybmFtZS1wYXNzd29yZC1mb3JtIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDEwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IHRydWUsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiQ09ORElUSU9OQUwiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IHRydWUsCiAgICAgICAgICAiZmxvd0FsaWFzIjogIkZpcnN0IGJyb2tlciBsb2dpbiAtIENvbmRpdGlvbmFsIE9UUCIsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiNjY3NzZhMjgtMGNjOS00NTgwLWI5NzQtNWI0OWIyZTg5NDI2IiwKICAgICAgImFsaWFzIjogImJyb3dzZXIiLAogICAgICAiZGVzY3JpcHRpb24iOiAiQnJvd3NlciBiYXNlZCBhdXRoZW50aWNhdGlvbiIsCiAgICAgICJwcm92aWRlcklkIjogImJhc2ljLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiB0cnVlLAogICAgICAiYnVpbHRJbiI6IHRydWUsCiAgICAgICJhdXRoZW50aWNhdGlvbkV4ZWN1dGlvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiYXV0aC1jb29raWUiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiQUxURVJOQVRJVkUiLAogICAgICAgICAgInByaW9yaXR5IjogMTAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiYXV0aC1zcG5lZ28iLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiRElTQUJMRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiaWRlbnRpdHktcHJvdmlkZXItcmVkaXJlY3RvciIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJBTFRFUk5BVElWRSIsCiAgICAgICAgICAicHJpb3JpdHkiOiAyNSwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIkFMVEVSTkFUSVZFIiwKICAgICAgICAgICJwcmlvcml0eSI6IDI2LAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgImZsb3dBbGlhcyI6ICJPcmdhbml6YXRpb24iLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJBTFRFUk5BVElWRSIsCiAgICAgICAgICAicHJpb3JpdHkiOiAzMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJmbG93QWxpYXMiOiAiZm9ybXMiLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjFjZjJjNDBhLTM5YmEtNDU4MS04ODcxLTUzNGNlYWI0YTYwNiIsCiAgICAgICJhbGlhcyI6ICJjbGllbnRzIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkJhc2UgYXV0aGVudGljYXRpb24gZm9yIGNsaWVudHMiLAogICAgICAicHJvdmlkZXJJZCI6ICJjbGllbnQtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IHRydWUsCiAgICAgICJidWlsdEluIjogdHJ1ZSwKICAgICAgImF1dGhlbnRpY2F0aW9uRXhlY3V0aW9ucyI6IFsKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJjbGllbnQtc2VjcmV0IiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIkFMVEVSTkFUSVZFIiwKICAgICAgICAgICJwcmlvcml0eSI6IDEwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImNsaWVudC1qd3QiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiQUxURVJOQVRJVkUiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiY2xpZW50LXNlY3JldC1qd3QiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiQUxURVJOQVRJVkUiLAogICAgICAgICAgInByaW9yaXR5IjogMzAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAiY2xpZW50LXg1MDkiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiQUxURVJOQVRJVkUiLAogICAgICAgICAgInByaW9yaXR5IjogNDAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogImFlN2JjNmVlLTE2YjktNGExZi05OTRjLTI5YTk4YjU4OWY1YiIsCiAgICAgICJhbGlhcyI6ICJkaXJlY3QgZ3JhbnQiLAogICAgICAiZGVzY3JpcHRpb24iOiAiT3BlbklEIENvbm5lY3QgUmVzb3VyY2UgT3duZXIgR3JhbnQiLAogICAgICAicHJvdmlkZXJJZCI6ICJiYXNpYy1mbG93IiwKICAgICAgInRvcExldmVsIjogdHJ1ZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImRpcmVjdC1ncmFudC12YWxpZGF0ZS11c2VybmFtZSIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJkaXJlY3QtZ3JhbnQtdmFsaWRhdGUtcGFzc3dvcmQiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJDT05ESVRJT05BTCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAzMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJmbG93QWxpYXMiOiAiRGlyZWN0IEdyYW50IC0gQ29uZGl0aW9uYWwgT1RQIiwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICI3NzllZDRjMi00OGM5LTRlYWQtOTlhMC1hZDUwYmFiMTdmMTQiLAogICAgICAiYWxpYXMiOiAiZG9ja2VyIGF1dGgiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVXNlZCBieSBEb2NrZXIgY2xpZW50cyB0byBhdXRoZW50aWNhdGUgYWdhaW5zdCB0aGUgSURQIiwKICAgICAgInByb3ZpZGVySWQiOiAiYmFzaWMtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IHRydWUsCiAgICAgICJidWlsdEluIjogdHJ1ZSwKICAgICAgImF1dGhlbnRpY2F0aW9uRXhlY3V0aW9ucyI6IFsKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJkb2NrZXItaHR0cC1iYXNpYy1hdXRoZW50aWNhdG9yIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDEwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIzNTAwYWYzMC03Y2NiLTQzNDktYjhjMi00N2RhNzE2OTI1ZTEiLAogICAgICAiYWxpYXMiOiAiZmlyc3QgYnJva2VyIGxvZ2luIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkFjdGlvbnMgdGFrZW4gYWZ0ZXIgZmlyc3QgYnJva2VyIGxvZ2luIHdpdGggaWRlbnRpdHkgcHJvdmlkZXIgYWNjb3VudCwgd2hpY2ggaXMgbm90IHlldCBsaW5rZWQgdG8gYW55IEtleWNsb2FrIGFjY291bnQiLAogICAgICAicHJvdmlkZXJJZCI6ICJiYXNpYy1mbG93IiwKICAgICAgInRvcExldmVsIjogdHJ1ZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yQ29uZmlnIjogInJldmlldyBwcm9maWxlIGNvbmZpZyIsCiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJpZHAtcmV2aWV3LXByb2ZpbGUiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMTAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAyMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJmbG93QWxpYXMiOiAiVXNlciBjcmVhdGlvbiBvciBsaW5raW5nIiwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IHRydWUsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiQ09ORElUSU9OQUwiLAogICAgICAgICAgInByaW9yaXR5IjogNTAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IHRydWUsCiAgICAgICAgICAiZmxvd0FsaWFzIjogIkZpcnN0IEJyb2tlciBMb2dpbiAtIENvbmRpdGlvbmFsIE9yZ2FuaXphdGlvbiIsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9LAogICAgewogICAgICAiaWQiOiAiNDM1YjMyOWQtYjI3NC00NTZmLWI1MTQtNGRjMWMzYmUyNThjIiwKICAgICAgImFsaWFzIjogImZvcm1zIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlVzZXJuYW1lLCBwYXNzd29yZCwgb3RwIGFuZCBvdGhlciBhdXRoIGZvcm1zLiIsCiAgICAgICJwcm92aWRlcklkIjogImJhc2ljLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiBmYWxzZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImF1dGgtdXNlcm5hbWUtcGFzc3dvcmQtZm9ybSIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIkNPTkRJVElPTkFMIiwKICAgICAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiB0cnVlLAogICAgICAgICAgImZsb3dBbGlhcyI6ICJCcm93c2VyIC0gQ29uZGl0aW9uYWwgT1RQIiwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIzZTc5NTFlOC1jMTBhLTQ4NjgtYjRmMi0zYmIzZDQ2NmQ2NTUiLAogICAgICAiYWxpYXMiOiAicmVnaXN0cmF0aW9uIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlJlZ2lzdHJhdGlvbiBmbG93IiwKICAgICAgInByb3ZpZGVySWQiOiAiYmFzaWMtZmxvdyIsCiAgICAgICJ0b3BMZXZlbCI6IHRydWUsCiAgICAgICJidWlsdEluIjogdHJ1ZSwKICAgICAgImF1dGhlbnRpY2F0aW9uRXhlY3V0aW9ucyI6IFsKICAgICAgICB7CiAgICAgICAgICAiYXV0aGVudGljYXRvciI6ICJyZWdpc3RyYXRpb24tcGFnZS1mb3JtIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IHRydWUsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMTAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IHRydWUsCiAgICAgICAgICAiZmxvd0FsaWFzIjogInJlZ2lzdHJhdGlvbiBmb3JtIiwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIwZjk0OTY3Ni01MWJjLTRmMzktYTE1ZS00MmI0ZWViMjNmNjUiLAogICAgICAiYWxpYXMiOiAicmVnaXN0cmF0aW9uIGZvcm0iLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmVnaXN0cmF0aW9uIGZvcm0iLAogICAgICAicHJvdmlkZXJJZCI6ICJmb3JtLWZsb3ciLAogICAgICAidG9wTGV2ZWwiOiBmYWxzZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogInJlZ2lzdHJhdGlvbi11c2VyLWNyZWF0aW9uIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogInJlZ2lzdHJhdGlvbi1wYXNzd29yZC1hY3Rpb24iLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogNTAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAicmVnaXN0cmF0aW9uLXJlY2FwdGNoYS1hY3Rpb24iLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiRElTQUJMRUQiLAogICAgICAgICAgInByaW9yaXR5IjogNjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAicmVnaXN0cmF0aW9uLXRlcm1zLWFuZC1jb25kaXRpb25zIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIkRJU0FCTEVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDcwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICB7CiAgICAgICJpZCI6ICIwZGZiMzU3ZS01NWRjLTQ4ZmUtOTcwMC05MzAzZDEyYzM2NjUiLAogICAgICAiYWxpYXMiOiAicmVzZXQgY3JlZGVudGlhbHMiLAogICAgICAiZGVzY3JpcHRpb24iOiAiUmVzZXQgY3JlZGVudGlhbHMgZm9yIGEgdXNlciBpZiB0aGV5IGZvcmdvdCB0aGVpciBwYXNzd29yZCBvciBzb21ldGhpbmciLAogICAgICAicHJvdmlkZXJJZCI6ICJiYXNpYy1mbG93IiwKICAgICAgInRvcExldmVsIjogdHJ1ZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogInJlc2V0LWNyZWRlbnRpYWxzLWNob29zZS11c2VyIiwKICAgICAgICAgICJhdXRoZW50aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVtZW50IjogIlJFUVVJUkVEIiwKICAgICAgICAgICJwcmlvcml0eSI6IDEwLAogICAgICAgICAgImF1dGhldGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJ1c2VyU2V0dXBBbGxvd2VkIjogZmFsc2UKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogInJlc2V0LWNyZWRlbnRpYWwtZW1haWwiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMjAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3IiOiAicmVzZXQtcGFzc3dvcmQiLAogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAicmVxdWlyZW1lbnQiOiAiUkVRVUlSRUQiLAogICAgICAgICAgInByaW9yaXR5IjogMzAsCiAgICAgICAgICAiYXV0aGV0aWNhdG9yRmxvdyI6IGZhbHNlLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgImF1dGhlbnRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJDT05ESVRJT05BTCIsCiAgICAgICAgICAicHJpb3JpdHkiOiA0MCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogdHJ1ZSwKICAgICAgICAgICJmbG93QWxpYXMiOiAiUmVzZXQgLSBDb25kaXRpb25hbCBPVFAiLAogICAgICAgICAgInVzZXJTZXR1cEFsbG93ZWQiOiBmYWxzZQogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImlkIjogIjE3NzJlOWZkLTlkZmQtNDU3Mi1hNWNhLWQ0NzAwOTI3Y2QxOSIsCiAgICAgICJhbGlhcyI6ICJzYW1sIGVjcCIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTQU1MIEVDUCBQcm9maWxlIEF1dGhlbnRpY2F0aW9uIEZsb3ciLAogICAgICAicHJvdmlkZXJJZCI6ICJiYXNpYy1mbG93IiwKICAgICAgInRvcExldmVsIjogdHJ1ZSwKICAgICAgImJ1aWx0SW4iOiB0cnVlLAogICAgICAiYXV0aGVudGljYXRpb25FeGVjdXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICJhdXRoZW50aWNhdG9yIjogImh0dHAtYmFzaWMtYXV0aGVudGljYXRvciIsCiAgICAgICAgICAiYXV0aGVudGljYXRvckZsb3ciOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlbWVudCI6ICJSRVFVSVJFRCIsCiAgICAgICAgICAicHJpb3JpdHkiOiAxMCwKICAgICAgICAgICJhdXRoZXRpY2F0b3JGbG93IjogZmFsc2UsCiAgICAgICAgICAidXNlclNldHVwQWxsb3dlZCI6IGZhbHNlCiAgICAgICAgfQogICAgICBdCiAgICB9CiAgXSwKICAiYXV0aGVudGljYXRvckNvbmZpZyI6IFsKICAgIHsKICAgICAgImlkIjogImY5OWIyODFjLWMwNmMtNDNmNi1iZDdkLTYxNWQxNWQ1MDY3ZSIsCiAgICAgICJhbGlhcyI6ICJjcmVhdGUgdW5pcXVlIHVzZXIgY29uZmlnIiwKICAgICAgImNvbmZpZyI6IHsKICAgICAgICAicmVxdWlyZS5wYXNzd29yZC51cGRhdGUuYWZ0ZXIucmVnaXN0cmF0aW9uIjogImZhbHNlIgogICAgICB9CiAgICB9LAogICAgewogICAgICAiaWQiOiAiZWE2N2U2ZmYtNDNkNy00ZTQxLTllZDMtZTgyY2JmYzJiMTcxIiwKICAgICAgImFsaWFzIjogInJldmlldyBwcm9maWxlIGNvbmZpZyIsCiAgICAgICJjb25maWciOiB7CiAgICAgICAgInVwZGF0ZS5wcm9maWxlLm9uLmZpcnN0LmxvZ2luIjogIm1pc3NpbmciCiAgICAgIH0KICAgIH0KICBdLAogICJyZXF1aXJlZEFjdGlvbnMiOiBbCiAgICB7CiAgICAgICJhbGlhcyI6ICJDT05GSUdVUkVfVE9UUCIsCiAgICAgICJuYW1lIjogIkNvbmZpZ3VyZSBPVFAiLAogICAgICAicHJvdmlkZXJJZCI6ICJDT05GSUdVUkVfVE9UUCIsCiAgICAgICJlbmFibGVkIjogdHJ1ZSwKICAgICAgImRlZmF1bHRBY3Rpb24iOiBmYWxzZSwKICAgICAgInByaW9yaXR5IjogMTAsCiAgICAgICJjb25maWciOiB7fQogICAgfSwKICAgIHsKICAgICAgImFsaWFzIjogIlRFUk1TX0FORF9DT05ESVRJT05TIiwKICAgICAgIm5hbWUiOiAiVGVybXMgYW5kIENvbmRpdGlvbnMiLAogICAgICAicHJvdmlkZXJJZCI6ICJURVJNU19BTkRfQ09ORElUSU9OUyIsCiAgICAgICJlbmFibGVkIjogZmFsc2UsCiAgICAgICJkZWZhdWx0QWN0aW9uIjogZmFsc2UsCiAgICAgICJwcmlvcml0eSI6IDIwLAogICAgICAiY29uZmlnIjoge30KICAgIH0sCiAgICB7CiAgICAgICJhbGlhcyI6ICJVUERBVEVfUEFTU1dPUkQiLAogICAgICAibmFtZSI6ICJVcGRhdGUgUGFzc3dvcmQiLAogICAgICAicHJvdmlkZXJJZCI6ICJVUERBVEVfUEFTU1dPUkQiLAogICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICJkZWZhdWx0QWN0aW9uIjogZmFsc2UsCiAgICAgICJwcmlvcml0eSI6IDMwLAogICAgICAiY29uZmlnIjoge30KICAgIH0sCiAgICB7CiAgICAgICJhbGlhcyI6ICJVUERBVEVfUFJPRklMRSIsCiAgICAgICJuYW1lIjogIlVwZGF0ZSBQcm9maWxlIiwKICAgICAgInByb3ZpZGVySWQiOiAiVVBEQVRFX1BST0ZJTEUiLAogICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICJkZWZhdWx0QWN0aW9uIjogZmFsc2UsCiAgICAgICJwcmlvcml0eSI6IDQwLAogICAgICAiY29uZmlnIjoge30KICAgIH0sCiAgICB7CiAgICAgICJhbGlhcyI6ICJWRVJJRllfRU1BSUwiLAogICAgICAibmFtZSI6ICJWZXJpZnkgRW1haWwiLAogICAgICAicHJvdmlkZXJJZCI6ICJWRVJJRllfRU1BSUwiLAogICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICJkZWZhdWx0QWN0aW9uIjogZmFsc2UsCiAgICAgICJwcmlvcml0eSI6IDUwLAogICAgICAiY29uZmlnIjoge30KICAgIH0sCiAgICB7CiAgICAgICJhbGlhcyI6ICJkZWxldGVfYWNjb3VudCIsCiAgICAgICJuYW1lIjogIkRlbGV0ZSBBY2NvdW50IiwKICAgICAgInByb3ZpZGVySWQiOiAiZGVsZXRlX2FjY291bnQiLAogICAgICAiZW5hYmxlZCI6IGZhbHNlLAogICAgICAiZGVmYXVsdEFjdGlvbiI6IGZhbHNlLAogICAgICAicHJpb3JpdHkiOiA2MCwKICAgICAgImNvbmZpZyI6IHt9CiAgICB9LAogICAgewogICAgICAiYWxpYXMiOiAid2ViYXV0aG4tcmVnaXN0ZXIiLAogICAgICAibmFtZSI6ICJXZWJhdXRobiBSZWdpc3RlciIsCiAgICAgICJwcm92aWRlcklkIjogIndlYmF1dGhuLXJlZ2lzdGVyIiwKICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAiZGVmYXVsdEFjdGlvbiI6IGZhbHNlLAogICAgICAicHJpb3JpdHkiOiA3MCwKICAgICAgImNvbmZpZyI6IHt9CiAgICB9LAogICAgewogICAgICAiYWxpYXMiOiAid2ViYXV0aG4tcmVnaXN0ZXItcGFzc3dvcmRsZXNzIiwKICAgICAgIm5hbWUiOiAiV2ViYXV0aG4gUmVnaXN0ZXIgUGFzc3dvcmRsZXNzIiwKICAgICAgInByb3ZpZGVySWQiOiAid2ViYXV0aG4tcmVnaXN0ZXItcGFzc3dvcmRsZXNzIiwKICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAiZGVmYXVsdEFjdGlvbiI6IGZhbHNlLAogICAgICAicHJpb3JpdHkiOiA4MCwKICAgICAgImNvbmZpZyI6IHt9CiAgICB9LAogICAgewogICAgICAiYWxpYXMiOiAiVkVSSUZZX1BST0ZJTEUiLAogICAgICAibmFtZSI6ICJWZXJpZnkgUHJvZmlsZSIsCiAgICAgICJwcm92aWRlcklkIjogIlZFUklGWV9QUk9GSUxFIiwKICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAiZGVmYXVsdEFjdGlvbiI6IGZhbHNlLAogICAgICAicHJpb3JpdHkiOiA5MCwKICAgICAgImNvbmZpZyI6IHt9CiAgICB9LAogICAgewogICAgICAiYWxpYXMiOiAiZGVsZXRlX2NyZWRlbnRpYWwiLAogICAgICAibmFtZSI6ICJEZWxldGUgQ3JlZGVudGlhbCIsCiAgICAgICJwcm92aWRlcklkIjogImRlbGV0ZV9jcmVkZW50aWFsIiwKICAgICAgImVuYWJsZWQiOiB0cnVlLAogICAgICAiZGVmYXVsdEFjdGlvbiI6IGZhbHNlLAogICAgICAicHJpb3JpdHkiOiAxMDAsCiAgICAgICJjb25maWciOiB7fQogICAgfSwKICAgIHsKICAgICAgImFsaWFzIjogInVwZGF0ZV91c2VyX2xvY2FsZSIsCiAgICAgICJuYW1lIjogIlVwZGF0ZSBVc2VyIExvY2FsZSIsCiAgICAgICJwcm92aWRlcklkIjogInVwZGF0ZV91c2VyX2xvY2FsZSIsCiAgICAgICJlbmFibGVkIjogdHJ1ZSwKICAgICAgImRlZmF1bHRBY3Rpb24iOiBmYWxzZSwKICAgICAgInByaW9yaXR5IjogMTAwMCwKICAgICAgImNvbmZpZyI6IHt9CiAgICB9CiAgXSwKICAiYnJvd3NlckZsb3ciOiAiYnJvd3NlciIsCiAgInJlZ2lzdHJhdGlvbkZsb3ciOiAicmVnaXN0cmF0aW9uIiwKICAiZGlyZWN0R3JhbnRGbG93IjogImRpcmVjdCBncmFudCIsCiAgInJlc2V0Q3JlZGVudGlhbHNGbG93IjogInJlc2V0IGNyZWRlbnRpYWxzIiwKICAiY2xpZW50QXV0aGVudGljYXRpb25GbG93IjogImNsaWVudHMiLAogICJkb2NrZXJBdXRoZW50aWNhdGlvbkZsb3ciOiAiZG9ja2VyIGF1dGgiLAogICJmaXJzdEJyb2tlckxvZ2luRmxvdyI6ICJmaXJzdCBicm9rZXIgbG9naW4iLAogICJhdHRyaWJ1dGVzIjogewogICAgImNpYmFCYWNrY2hhbm5lbFRva2VuRGVsaXZlcnlNb2RlIjogInBvbGwiLAogICAgImNpYmFBdXRoUmVxdWVzdGVkVXNlckhpbnQiOiAibG9naW5faGludCIsCiAgICAiY2xpZW50T2ZmbGluZVNlc3Npb25NYXhMaWZlc3BhbiI6ICIwIiwKICAgICJvYXV0aDJEZXZpY2VQb2xsaW5nSW50ZXJ2YWwiOiAiNSIsCiAgICAiY2xpZW50U2Vzc2lvbklkbGVUaW1lb3V0IjogIjAiLAogICAgImNsaWVudE9mZmxpbmVTZXNzaW9uSWRsZVRpbWVvdXQiOiAiMCIsCiAgICAiY2liYUludGVydmFsIjogIjUiLAogICAgInJlYWxtUmV1c2FibGVPdHBDb2RlIjogImZhbHNlIiwKICAgICJjaWJhRXhwaXJlc0luIjogIjEyMCIsCiAgICAib2F1dGgyRGV2aWNlQ29kZUxpZmVzcGFuIjogIjYwMCIsCiAgICAicGFyUmVxdWVzdFVyaUxpZmVzcGFuIjogIjYwIiwKICAgICJjbGllbnRTZXNzaW9uTWF4TGlmZXNwYW4iOiAiMCIsCiAgICAiZnJvbnRlbmRVcmwiOiAiIiwKICAgICJhY3IubG9hLm1hcCI6ICJ7fSIsCiAgICAiZGFya01vZGUiOiAiZmFsc2UiCiAgfSwKICAia2V5Y2xvYWtWZXJzaW9uIjogIjI2LjEuNCIsCiAgInVzZXJNYW5hZ2VkQWNjZXNzQWxsb3dlZCI6IGZhbHNlLAogICJvcmdhbml6YXRpb25zRW5hYmxlZCI6IGZhbHNlLAogICJ2ZXJpZmlhYmxlQ3JlZGVudGlhbHNFbmFibGVkIjogZmFsc2UsCiAgImFkbWluUGVybWlzc2lvbnNFbmFibGVkIjogZmFsc2UsCiAgImNsaWVudFByb2ZpbGVzIjogewogICAgInByb2ZpbGVzIjogW10KICB9LAogICJjbGllbnRQb2xpY2llcyI6IHsKICAgICJwb2xpY2llcyI6IFtdCiAgfQp9'