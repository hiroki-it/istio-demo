affinity: |
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node.kubernetes.io/nodegroup
              operator: In
              values:
                - app

args:
  - start-dev
  - --import-realm

command:
  - /opt/keycloak/bin/kc.sh

database:
  # MySQLがベンダーの場合、マイグレーションが長時間のためにProbeが失敗する
  # 解消されるまで dev-file にする
  # @see https://github.com/keycloak/keycloak/issues/35261
  vendor: dev-file

extraEnv: |
  - name: KC_HOSTNAME
    value: localhost
  - name: KC_BOOTSTRAP_ADMIN_USERNAME
    value: admin
  - name: KC_BOOTSTRAP_ADMIN_PASSWORD
    value: admin
  - name: JAVA_OPTS_APPEND
    value: -Djgroups.dns.query=keycloak-headless.app.svc.cluster.local

extraVolumes: |
  - name: keycloak-realms
    secret:
      secretName: keycloak-realms

extraVolumeMounts: |
  - name: keycloak-realms
    mountPath: /opt/keycloak/data/import

fullnameOverride: keycloak

image:
  tag: 26.1.0

service:
  httpPort: 8080
  httpsPort: 8443

secrets:
  realms:
    data:
      realm-dev.json: 
