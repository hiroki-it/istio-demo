{{- if eq .Values.vSystemFailure.enabled false }}
{{- if eq .Values.trafficManagement.enabled true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-v1
  labels:
    app: {{ .Values.service.name }}
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      version: v1
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: v1
    spec:
      serviceAccountName: bookinfo-{{ .Values.service.name }}
      containers:
        - name: {{ .Values.service.name }}
          image: docker.io/istio/examples-bookinfo-{{ .Values.service.name }}-v1:1.20.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.port }}
              path: /health
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
      terminationGracePeriodSeconds: 45
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.kubernetes.io/nodegroup
                    operator: In
                    values:
                      - app
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-v3
  labels:
    app: {{ .Values.service.name }}
    version: v3
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      version: v3
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: v3
    spec:
      serviceAccountName: bookinfo-{{ .Values.service.name }}
      containers:
        - name: {{ .Values.service.name }}
          image: hirokihasegawa/examples-bookinfo-{{ .Values.service.name }}-v3:1.20.2-istio-demo
          imagePullPolicy: Always
          env:
            - name: DB_TYPE
              value: mysql
            - name: MYSQL_DB_HOST
              value: {{ .Values.database.host }}
            - name: MYSQL_DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: MYSQL_DB_USER
              value: root
            - name: MYSQL_DB_PASSWORD
              value: root
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.port }}
              path: /health
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
      terminationGracePeriodSeconds: 45
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.kubernetes.io/nodegroup
                    operator: In
                    values:
                      - app
{{- else }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-v-delayed-50percent-delayof7s
  labels:
    app: {{ .Values.service.name }}
    version: v-delayed-50percent-delayof7s
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      version: v-delayed-50percent-delayof7s
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: v-delayed-50percent-delayof7s
    spec:
      serviceAccountName: bookinfo-{{ .Values.service.name }}
      containers:
        - name: {{ .Values.service.name }}
          image: docker.io/istio/examples-bookinfo-{{ .Values.service.name }}-v-delayed:1.20.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.port }}
              path: /health
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
      terminationGracePeriodSeconds: 45
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.kubernetes.io/nodegroup
                    operator: In
                    values:
                      - app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-v-faulty-50percent-503
  labels:
    app: {{ .Values.service.name }}
    version: v-faulty-50percent-503
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      version: v-faulty-50percent-503
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: v-faulty-50percent-503
    spec:
      serviceAccountName: bookinfo-{{ .Values.service.name }}
      containers:
        - name: {{ .Values.service.name }}
          image: docker.io/istio/examples-bookinfo-{{ .Values.service.name }}-v-faulty:1.20.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.port }}
              path: /health
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
      terminationGracePeriodSeconds: 45
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.kubernetes.io/nodegroup
                    operator: In
                    values:
                      - app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}-v-internal-server-error-500-50percent
  labels:
    app: {{ .Values.service.name }}
    version: v-internal-server-error-500-50percent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      version: v-internal-server-error-500-50percent
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: v-internal-server-error-500-50percent
    spec:
      serviceAccountName: bookinfo-{{ .Values.service.name }}
      containers:
        - name: {{ .Values.service.name }}
          image: hirokihasegawa/examples-bookinfo-{{ .Values.service.name }}-v-internal-server-error-500-50percent:1.20.2-istio-demo
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              port: {{ .Values.service.port }}
              path: /health
            initialDelaySeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 51Mi
            limits:
              cpu: 500m
              memory: 512Mi
      terminationGracePeriodSeconds: 45
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.kubernetes.io/nodegroup
                    operator: In
                    values:
                      - app
{{- end }}